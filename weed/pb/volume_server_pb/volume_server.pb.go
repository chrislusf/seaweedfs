// Code generated by protoc-gen-go. DO NOT EDIT.
// source: volume_server.proto

package volume_server_pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BatchDeleteRequest struct {
	FileIds              []string `protobuf:"bytes,1,rep,name=file_ids,json=fileIds,proto3" json:"file_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BatchDeleteRequest) Reset()         { *m = BatchDeleteRequest{} }
func (m *BatchDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*BatchDeleteRequest) ProtoMessage()    {}
func (*BatchDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a683896b3b0ea3, []int{0}
}

func (m *BatchDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchDeleteRequest.Unmarshal(m, b)
}
func (m *BatchDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchDeleteRequest.Marshal(b, m, deterministic)
}
func (m *BatchDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchDeleteRequest.Merge(m, src)
}
func (m *BatchDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_BatchDeleteRequest.Size(m)
}
func (m *BatchDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BatchDeleteRequest proto.InternalMessageInfo

func (m *BatchDeleteRequest) GetFileIds() []string {
	if m != nil {
		return m.FileIds
	}
	return nil
}

type BatchDeleteResponse struct {
	Results              []*DeleteResult `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *BatchDeleteResponse) Reset()         { *m = BatchDeleteResponse{} }
func (m *BatchDeleteResponse) String() string { return proto.CompactTextString(m) }
func (*BatchDeleteResponse) ProtoMessage()    {}
func (*BatchDeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a683896b3b0ea3, []int{1}
}

func (m *BatchDeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchDeleteResponse.Unmarshal(m, b)
}
func (m *BatchDeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchDeleteResponse.Marshal(b, m, deterministic)
}
func (m *BatchDeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchDeleteResponse.Merge(m, src)
}
func (m *BatchDeleteResponse) XXX_Size() int {
	return xxx_messageInfo_BatchDeleteResponse.Size(m)
}
func (m *BatchDeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchDeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BatchDeleteResponse proto.InternalMessageInfo

func (m *BatchDeleteResponse) GetResults() []*DeleteResult {
	if m != nil {
		return m.Results
	}
	return nil
}

type DeleteResult struct {
	FileId               string   `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	Status               int32    `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Error                string   `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	Size                 uint32   `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteResult) Reset()         { *m = DeleteResult{} }
func (m *DeleteResult) String() string { return proto.CompactTextString(m) }
func (*DeleteResult) ProtoMessage()    {}
func (*DeleteResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a683896b3b0ea3, []int{2}
}

func (m *DeleteResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteResult.Unmarshal(m, b)
}
func (m *DeleteResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteResult.Marshal(b, m, deterministic)
}
func (m *DeleteResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteResult.Merge(m, src)
}
func (m *DeleteResult) XXX_Size() int {
	return xxx_messageInfo_DeleteResult.Size(m)
}
func (m *DeleteResult) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteResult.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteResult proto.InternalMessageInfo

func (m *DeleteResult) GetFileId() string {
	if m != nil {
		return m.FileId
	}
	return ""
}

func (m *DeleteResult) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *DeleteResult) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *DeleteResult) GetSize() uint32 {
	if m != nil {
		return m.Size
	}
	return 0
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a683896b3b0ea3, []int{3}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type VacuumVolumeCheckRequest struct {
	VolumdId             uint32   `protobuf:"varint,1,opt,name=volumd_id,json=volumdId,proto3" json:"volumd_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VacuumVolumeCheckRequest) Reset()         { *m = VacuumVolumeCheckRequest{} }
func (m *VacuumVolumeCheckRequest) String() string { return proto.CompactTextString(m) }
func (*VacuumVolumeCheckRequest) ProtoMessage()    {}
func (*VacuumVolumeCheckRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a683896b3b0ea3, []int{4}
}

func (m *VacuumVolumeCheckRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VacuumVolumeCheckRequest.Unmarshal(m, b)
}
func (m *VacuumVolumeCheckRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VacuumVolumeCheckRequest.Marshal(b, m, deterministic)
}
func (m *VacuumVolumeCheckRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VacuumVolumeCheckRequest.Merge(m, src)
}
func (m *VacuumVolumeCheckRequest) XXX_Size() int {
	return xxx_messageInfo_VacuumVolumeCheckRequest.Size(m)
}
func (m *VacuumVolumeCheckRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VacuumVolumeCheckRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VacuumVolumeCheckRequest proto.InternalMessageInfo

func (m *VacuumVolumeCheckRequest) GetVolumdId() uint32 {
	if m != nil {
		return m.VolumdId
	}
	return 0
}

type VacuumVolumeCheckResponse struct {
	GarbageRatio         float64  `protobuf:"fixed64,1,opt,name=garbage_ratio,json=garbageRatio,proto3" json:"garbage_ratio,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VacuumVolumeCheckResponse) Reset()         { *m = VacuumVolumeCheckResponse{} }
func (m *VacuumVolumeCheckResponse) String() string { return proto.CompactTextString(m) }
func (*VacuumVolumeCheckResponse) ProtoMessage()    {}
func (*VacuumVolumeCheckResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a683896b3b0ea3, []int{5}
}

func (m *VacuumVolumeCheckResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VacuumVolumeCheckResponse.Unmarshal(m, b)
}
func (m *VacuumVolumeCheckResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VacuumVolumeCheckResponse.Marshal(b, m, deterministic)
}
func (m *VacuumVolumeCheckResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VacuumVolumeCheckResponse.Merge(m, src)
}
func (m *VacuumVolumeCheckResponse) XXX_Size() int {
	return xxx_messageInfo_VacuumVolumeCheckResponse.Size(m)
}
func (m *VacuumVolumeCheckResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VacuumVolumeCheckResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VacuumVolumeCheckResponse proto.InternalMessageInfo

func (m *VacuumVolumeCheckResponse) GetGarbageRatio() float64 {
	if m != nil {
		return m.GarbageRatio
	}
	return 0
}

type VacuumVolumeCompactRequest struct {
	VolumdId             uint32   `protobuf:"varint,1,opt,name=volumd_id,json=volumdId,proto3" json:"volumd_id,omitempty"`
	Preallocate          int64    `protobuf:"varint,2,opt,name=preallocate,proto3" json:"preallocate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VacuumVolumeCompactRequest) Reset()         { *m = VacuumVolumeCompactRequest{} }
func (m *VacuumVolumeCompactRequest) String() string { return proto.CompactTextString(m) }
func (*VacuumVolumeCompactRequest) ProtoMessage()    {}
func (*VacuumVolumeCompactRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a683896b3b0ea3, []int{6}
}

func (m *VacuumVolumeCompactRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VacuumVolumeCompactRequest.Unmarshal(m, b)
}
func (m *VacuumVolumeCompactRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VacuumVolumeCompactRequest.Marshal(b, m, deterministic)
}
func (m *VacuumVolumeCompactRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VacuumVolumeCompactRequest.Merge(m, src)
}
func (m *VacuumVolumeCompactRequest) XXX_Size() int {
	return xxx_messageInfo_VacuumVolumeCompactRequest.Size(m)
}
func (m *VacuumVolumeCompactRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VacuumVolumeCompactRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VacuumVolumeCompactRequest proto.InternalMessageInfo

func (m *VacuumVolumeCompactRequest) GetVolumdId() uint32 {
	if m != nil {
		return m.VolumdId
	}
	return 0
}

func (m *VacuumVolumeCompactRequest) GetPreallocate() int64 {
	if m != nil {
		return m.Preallocate
	}
	return 0
}

type VacuumVolumeCompactResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VacuumVolumeCompactResponse) Reset()         { *m = VacuumVolumeCompactResponse{} }
func (m *VacuumVolumeCompactResponse) String() string { return proto.CompactTextString(m) }
func (*VacuumVolumeCompactResponse) ProtoMessage()    {}
func (*VacuumVolumeCompactResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a683896b3b0ea3, []int{7}
}

func (m *VacuumVolumeCompactResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VacuumVolumeCompactResponse.Unmarshal(m, b)
}
func (m *VacuumVolumeCompactResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VacuumVolumeCompactResponse.Marshal(b, m, deterministic)
}
func (m *VacuumVolumeCompactResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VacuumVolumeCompactResponse.Merge(m, src)
}
func (m *VacuumVolumeCompactResponse) XXX_Size() int {
	return xxx_messageInfo_VacuumVolumeCompactResponse.Size(m)
}
func (m *VacuumVolumeCompactResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VacuumVolumeCompactResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VacuumVolumeCompactResponse proto.InternalMessageInfo

type VacuumVolumeCommitRequest struct {
	VolumdId             uint32   `protobuf:"varint,1,opt,name=volumd_id,json=volumdId,proto3" json:"volumd_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VacuumVolumeCommitRequest) Reset()         { *m = VacuumVolumeCommitRequest{} }
func (m *VacuumVolumeCommitRequest) String() string { return proto.CompactTextString(m) }
func (*VacuumVolumeCommitRequest) ProtoMessage()    {}
func (*VacuumVolumeCommitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a683896b3b0ea3, []int{8}
}

func (m *VacuumVolumeCommitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VacuumVolumeCommitRequest.Unmarshal(m, b)
}
func (m *VacuumVolumeCommitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VacuumVolumeCommitRequest.Marshal(b, m, deterministic)
}
func (m *VacuumVolumeCommitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VacuumVolumeCommitRequest.Merge(m, src)
}
func (m *VacuumVolumeCommitRequest) XXX_Size() int {
	return xxx_messageInfo_VacuumVolumeCommitRequest.Size(m)
}
func (m *VacuumVolumeCommitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VacuumVolumeCommitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VacuumVolumeCommitRequest proto.InternalMessageInfo

func (m *VacuumVolumeCommitRequest) GetVolumdId() uint32 {
	if m != nil {
		return m.VolumdId
	}
	return 0
}

type VacuumVolumeCommitResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VacuumVolumeCommitResponse) Reset()         { *m = VacuumVolumeCommitResponse{} }
func (m *VacuumVolumeCommitResponse) String() string { return proto.CompactTextString(m) }
func (*VacuumVolumeCommitResponse) ProtoMessage()    {}
func (*VacuumVolumeCommitResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a683896b3b0ea3, []int{9}
}

func (m *VacuumVolumeCommitResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VacuumVolumeCommitResponse.Unmarshal(m, b)
}
func (m *VacuumVolumeCommitResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VacuumVolumeCommitResponse.Marshal(b, m, deterministic)
}
func (m *VacuumVolumeCommitResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VacuumVolumeCommitResponse.Merge(m, src)
}
func (m *VacuumVolumeCommitResponse) XXX_Size() int {
	return xxx_messageInfo_VacuumVolumeCommitResponse.Size(m)
}
func (m *VacuumVolumeCommitResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VacuumVolumeCommitResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VacuumVolumeCommitResponse proto.InternalMessageInfo

type VacuumVolumeCleanupRequest struct {
	VolumdId             uint32   `protobuf:"varint,1,opt,name=volumd_id,json=volumdId,proto3" json:"volumd_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VacuumVolumeCleanupRequest) Reset()         { *m = VacuumVolumeCleanupRequest{} }
func (m *VacuumVolumeCleanupRequest) String() string { return proto.CompactTextString(m) }
func (*VacuumVolumeCleanupRequest) ProtoMessage()    {}
func (*VacuumVolumeCleanupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a683896b3b0ea3, []int{10}
}

func (m *VacuumVolumeCleanupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VacuumVolumeCleanupRequest.Unmarshal(m, b)
}
func (m *VacuumVolumeCleanupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VacuumVolumeCleanupRequest.Marshal(b, m, deterministic)
}
func (m *VacuumVolumeCleanupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VacuumVolumeCleanupRequest.Merge(m, src)
}
func (m *VacuumVolumeCleanupRequest) XXX_Size() int {
	return xxx_messageInfo_VacuumVolumeCleanupRequest.Size(m)
}
func (m *VacuumVolumeCleanupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VacuumVolumeCleanupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VacuumVolumeCleanupRequest proto.InternalMessageInfo

func (m *VacuumVolumeCleanupRequest) GetVolumdId() uint32 {
	if m != nil {
		return m.VolumdId
	}
	return 0
}

type VacuumVolumeCleanupResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VacuumVolumeCleanupResponse) Reset()         { *m = VacuumVolumeCleanupResponse{} }
func (m *VacuumVolumeCleanupResponse) String() string { return proto.CompactTextString(m) }
func (*VacuumVolumeCleanupResponse) ProtoMessage()    {}
func (*VacuumVolumeCleanupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a683896b3b0ea3, []int{11}
}

func (m *VacuumVolumeCleanupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VacuumVolumeCleanupResponse.Unmarshal(m, b)
}
func (m *VacuumVolumeCleanupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VacuumVolumeCleanupResponse.Marshal(b, m, deterministic)
}
func (m *VacuumVolumeCleanupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VacuumVolumeCleanupResponse.Merge(m, src)
}
func (m *VacuumVolumeCleanupResponse) XXX_Size() int {
	return xxx_messageInfo_VacuumVolumeCleanupResponse.Size(m)
}
func (m *VacuumVolumeCleanupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VacuumVolumeCleanupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VacuumVolumeCleanupResponse proto.InternalMessageInfo

type DeleteCollectionRequest struct {
	Collection           string   `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteCollectionRequest) Reset()         { *m = DeleteCollectionRequest{} }
func (m *DeleteCollectionRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteCollectionRequest) ProtoMessage()    {}
func (*DeleteCollectionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a683896b3b0ea3, []int{12}
}

func (m *DeleteCollectionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCollectionRequest.Unmarshal(m, b)
}
func (m *DeleteCollectionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCollectionRequest.Marshal(b, m, deterministic)
}
func (m *DeleteCollectionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCollectionRequest.Merge(m, src)
}
func (m *DeleteCollectionRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteCollectionRequest.Size(m)
}
func (m *DeleteCollectionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCollectionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCollectionRequest proto.InternalMessageInfo

func (m *DeleteCollectionRequest) GetCollection() string {
	if m != nil {
		return m.Collection
	}
	return ""
}

type DeleteCollectionResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteCollectionResponse) Reset()         { *m = DeleteCollectionResponse{} }
func (m *DeleteCollectionResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteCollectionResponse) ProtoMessage()    {}
func (*DeleteCollectionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a683896b3b0ea3, []int{13}
}

func (m *DeleteCollectionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCollectionResponse.Unmarshal(m, b)
}
func (m *DeleteCollectionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCollectionResponse.Marshal(b, m, deterministic)
}
func (m *DeleteCollectionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCollectionResponse.Merge(m, src)
}
func (m *DeleteCollectionResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteCollectionResponse.Size(m)
}
func (m *DeleteCollectionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCollectionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCollectionResponse proto.InternalMessageInfo

type AssignVolumeRequest struct {
	VolumdId             uint32   `protobuf:"varint,1,opt,name=volumd_id,json=volumdId,proto3" json:"volumd_id,omitempty"`
	Collection           string   `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	Preallocate          int64    `protobuf:"varint,3,opt,name=preallocate,proto3" json:"preallocate,omitempty"`
	Replication          string   `protobuf:"bytes,4,opt,name=replication,proto3" json:"replication,omitempty"`
	Ttl                  string   `protobuf:"bytes,5,opt,name=ttl,proto3" json:"ttl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AssignVolumeRequest) Reset()         { *m = AssignVolumeRequest{} }
func (m *AssignVolumeRequest) String() string { return proto.CompactTextString(m) }
func (*AssignVolumeRequest) ProtoMessage()    {}
func (*AssignVolumeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a683896b3b0ea3, []int{14}
}

func (m *AssignVolumeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssignVolumeRequest.Unmarshal(m, b)
}
func (m *AssignVolumeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssignVolumeRequest.Marshal(b, m, deterministic)
}
func (m *AssignVolumeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssignVolumeRequest.Merge(m, src)
}
func (m *AssignVolumeRequest) XXX_Size() int {
	return xxx_messageInfo_AssignVolumeRequest.Size(m)
}
func (m *AssignVolumeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AssignVolumeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AssignVolumeRequest proto.InternalMessageInfo

func (m *AssignVolumeRequest) GetVolumdId() uint32 {
	if m != nil {
		return m.VolumdId
	}
	return 0
}

func (m *AssignVolumeRequest) GetCollection() string {
	if m != nil {
		return m.Collection
	}
	return ""
}

func (m *AssignVolumeRequest) GetPreallocate() int64 {
	if m != nil {
		return m.Preallocate
	}
	return 0
}

func (m *AssignVolumeRequest) GetReplication() string {
	if m != nil {
		return m.Replication
	}
	return ""
}

func (m *AssignVolumeRequest) GetTtl() string {
	if m != nil {
		return m.Ttl
	}
	return ""
}

type AssignVolumeResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AssignVolumeResponse) Reset()         { *m = AssignVolumeResponse{} }
func (m *AssignVolumeResponse) String() string { return proto.CompactTextString(m) }
func (*AssignVolumeResponse) ProtoMessage()    {}
func (*AssignVolumeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a683896b3b0ea3, []int{15}
}

func (m *AssignVolumeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssignVolumeResponse.Unmarshal(m, b)
}
func (m *AssignVolumeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssignVolumeResponse.Marshal(b, m, deterministic)
}
func (m *AssignVolumeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssignVolumeResponse.Merge(m, src)
}
func (m *AssignVolumeResponse) XXX_Size() int {
	return xxx_messageInfo_AssignVolumeResponse.Size(m)
}
func (m *AssignVolumeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AssignVolumeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AssignVolumeResponse proto.InternalMessageInfo

type VolumeSyncStatusRequest struct {
	VolumdId             uint32   `protobuf:"varint,1,opt,name=volumd_id,json=volumdId,proto3" json:"volumd_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeSyncStatusRequest) Reset()         { *m = VolumeSyncStatusRequest{} }
func (m *VolumeSyncStatusRequest) String() string { return proto.CompactTextString(m) }
func (*VolumeSyncStatusRequest) ProtoMessage()    {}
func (*VolumeSyncStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a683896b3b0ea3, []int{16}
}

func (m *VolumeSyncStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeSyncStatusRequest.Unmarshal(m, b)
}
func (m *VolumeSyncStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeSyncStatusRequest.Marshal(b, m, deterministic)
}
func (m *VolumeSyncStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeSyncStatusRequest.Merge(m, src)
}
func (m *VolumeSyncStatusRequest) XXX_Size() int {
	return xxx_messageInfo_VolumeSyncStatusRequest.Size(m)
}
func (m *VolumeSyncStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeSyncStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeSyncStatusRequest proto.InternalMessageInfo

func (m *VolumeSyncStatusRequest) GetVolumdId() uint32 {
	if m != nil {
		return m.VolumdId
	}
	return 0
}

type VolumeSyncStatusResponse struct {
	VolumdId             uint32   `protobuf:"varint,1,opt,name=volumd_id,json=volumdId,proto3" json:"volumd_id,omitempty"`
	Collection           string   `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	Replication          string   `protobuf:"bytes,4,opt,name=replication,proto3" json:"replication,omitempty"`
	Ttl                  string   `protobuf:"bytes,5,opt,name=ttl,proto3" json:"ttl,omitempty"`
	TailOffset           uint64   `protobuf:"varint,6,opt,name=tail_offset,json=tailOffset,proto3" json:"tail_offset,omitempty"`
	CompactRevision      uint32   `protobuf:"varint,7,opt,name=compact_revision,json=compactRevision,proto3" json:"compact_revision,omitempty"`
	IdxFileSize          uint64   `protobuf:"varint,8,opt,name=idx_file_size,json=idxFileSize,proto3" json:"idx_file_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeSyncStatusResponse) Reset()         { *m = VolumeSyncStatusResponse{} }
func (m *VolumeSyncStatusResponse) String() string { return proto.CompactTextString(m) }
func (*VolumeSyncStatusResponse) ProtoMessage()    {}
func (*VolumeSyncStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a683896b3b0ea3, []int{17}
}

func (m *VolumeSyncStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeSyncStatusResponse.Unmarshal(m, b)
}
func (m *VolumeSyncStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeSyncStatusResponse.Marshal(b, m, deterministic)
}
func (m *VolumeSyncStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeSyncStatusResponse.Merge(m, src)
}
func (m *VolumeSyncStatusResponse) XXX_Size() int {
	return xxx_messageInfo_VolumeSyncStatusResponse.Size(m)
}
func (m *VolumeSyncStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeSyncStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeSyncStatusResponse proto.InternalMessageInfo

func (m *VolumeSyncStatusResponse) GetVolumdId() uint32 {
	if m != nil {
		return m.VolumdId
	}
	return 0
}

func (m *VolumeSyncStatusResponse) GetCollection() string {
	if m != nil {
		return m.Collection
	}
	return ""
}

func (m *VolumeSyncStatusResponse) GetReplication() string {
	if m != nil {
		return m.Replication
	}
	return ""
}

func (m *VolumeSyncStatusResponse) GetTtl() string {
	if m != nil {
		return m.Ttl
	}
	return ""
}

func (m *VolumeSyncStatusResponse) GetTailOffset() uint64 {
	if m != nil {
		return m.TailOffset
	}
	return 0
}

func (m *VolumeSyncStatusResponse) GetCompactRevision() uint32 {
	if m != nil {
		return m.CompactRevision
	}
	return 0
}

func (m *VolumeSyncStatusResponse) GetIdxFileSize() uint64 {
	if m != nil {
		return m.IdxFileSize
	}
	return 0
}

type VolumeSyncIndexRequest struct {
	VolumdId             uint32   `protobuf:"varint,1,opt,name=volumd_id,json=volumdId,proto3" json:"volumd_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeSyncIndexRequest) Reset()         { *m = VolumeSyncIndexRequest{} }
func (m *VolumeSyncIndexRequest) String() string { return proto.CompactTextString(m) }
func (*VolumeSyncIndexRequest) ProtoMessage()    {}
func (*VolumeSyncIndexRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a683896b3b0ea3, []int{18}
}

func (m *VolumeSyncIndexRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeSyncIndexRequest.Unmarshal(m, b)
}
func (m *VolumeSyncIndexRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeSyncIndexRequest.Marshal(b, m, deterministic)
}
func (m *VolumeSyncIndexRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeSyncIndexRequest.Merge(m, src)
}
func (m *VolumeSyncIndexRequest) XXX_Size() int {
	return xxx_messageInfo_VolumeSyncIndexRequest.Size(m)
}
func (m *VolumeSyncIndexRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeSyncIndexRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeSyncIndexRequest proto.InternalMessageInfo

func (m *VolumeSyncIndexRequest) GetVolumdId() uint32 {
	if m != nil {
		return m.VolumdId
	}
	return 0
}

type VolumeSyncIndexResponse struct {
	IndexFileContent     []byte   `protobuf:"bytes,1,opt,name=index_file_content,json=indexFileContent,proto3" json:"index_file_content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeSyncIndexResponse) Reset()         { *m = VolumeSyncIndexResponse{} }
func (m *VolumeSyncIndexResponse) String() string { return proto.CompactTextString(m) }
func (*VolumeSyncIndexResponse) ProtoMessage()    {}
func (*VolumeSyncIndexResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a683896b3b0ea3, []int{19}
}

func (m *VolumeSyncIndexResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeSyncIndexResponse.Unmarshal(m, b)
}
func (m *VolumeSyncIndexResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeSyncIndexResponse.Marshal(b, m, deterministic)
}
func (m *VolumeSyncIndexResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeSyncIndexResponse.Merge(m, src)
}
func (m *VolumeSyncIndexResponse) XXX_Size() int {
	return xxx_messageInfo_VolumeSyncIndexResponse.Size(m)
}
func (m *VolumeSyncIndexResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeSyncIndexResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeSyncIndexResponse proto.InternalMessageInfo

func (m *VolumeSyncIndexResponse) GetIndexFileContent() []byte {
	if m != nil {
		return m.IndexFileContent
	}
	return nil
}

type VolumeSyncDataRequest struct {
	VolumdId             uint32   `protobuf:"varint,1,opt,name=volumd_id,json=volumdId,proto3" json:"volumd_id,omitempty"`
	Revision             uint32   `protobuf:"varint,2,opt,name=revision,proto3" json:"revision,omitempty"`
	Offset               uint32   `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Size                 uint32   `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	NeedleId             string   `protobuf:"bytes,5,opt,name=needle_id,json=needleId,proto3" json:"needle_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeSyncDataRequest) Reset()         { *m = VolumeSyncDataRequest{} }
func (m *VolumeSyncDataRequest) String() string { return proto.CompactTextString(m) }
func (*VolumeSyncDataRequest) ProtoMessage()    {}
func (*VolumeSyncDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a683896b3b0ea3, []int{20}
}

func (m *VolumeSyncDataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeSyncDataRequest.Unmarshal(m, b)
}
func (m *VolumeSyncDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeSyncDataRequest.Marshal(b, m, deterministic)
}
func (m *VolumeSyncDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeSyncDataRequest.Merge(m, src)
}
func (m *VolumeSyncDataRequest) XXX_Size() int {
	return xxx_messageInfo_VolumeSyncDataRequest.Size(m)
}
func (m *VolumeSyncDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeSyncDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeSyncDataRequest proto.InternalMessageInfo

func (m *VolumeSyncDataRequest) GetVolumdId() uint32 {
	if m != nil {
		return m.VolumdId
	}
	return 0
}

func (m *VolumeSyncDataRequest) GetRevision() uint32 {
	if m != nil {
		return m.Revision
	}
	return 0
}

func (m *VolumeSyncDataRequest) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *VolumeSyncDataRequest) GetSize() uint32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *VolumeSyncDataRequest) GetNeedleId() string {
	if m != nil {
		return m.NeedleId
	}
	return ""
}

type VolumeSyncDataResponse struct {
	FileContent          []byte   `protobuf:"bytes,1,opt,name=file_content,json=fileContent,proto3" json:"file_content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeSyncDataResponse) Reset()         { *m = VolumeSyncDataResponse{} }
func (m *VolumeSyncDataResponse) String() string { return proto.CompactTextString(m) }
func (*VolumeSyncDataResponse) ProtoMessage()    {}
func (*VolumeSyncDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a683896b3b0ea3, []int{21}
}

func (m *VolumeSyncDataResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeSyncDataResponse.Unmarshal(m, b)
}
func (m *VolumeSyncDataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeSyncDataResponse.Marshal(b, m, deterministic)
}
func (m *VolumeSyncDataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeSyncDataResponse.Merge(m, src)
}
func (m *VolumeSyncDataResponse) XXX_Size() int {
	return xxx_messageInfo_VolumeSyncDataResponse.Size(m)
}
func (m *VolumeSyncDataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeSyncDataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeSyncDataResponse proto.InternalMessageInfo

func (m *VolumeSyncDataResponse) GetFileContent() []byte {
	if m != nil {
		return m.FileContent
	}
	return nil
}

type VolumeMountRequest struct {
	VolumdId             uint32   `protobuf:"varint,1,opt,name=volumd_id,json=volumdId,proto3" json:"volumd_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeMountRequest) Reset()         { *m = VolumeMountRequest{} }
func (m *VolumeMountRequest) String() string { return proto.CompactTextString(m) }
func (*VolumeMountRequest) ProtoMessage()    {}
func (*VolumeMountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a683896b3b0ea3, []int{22}
}

func (m *VolumeMountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeMountRequest.Unmarshal(m, b)
}
func (m *VolumeMountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeMountRequest.Marshal(b, m, deterministic)
}
func (m *VolumeMountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeMountRequest.Merge(m, src)
}
func (m *VolumeMountRequest) XXX_Size() int {
	return xxx_messageInfo_VolumeMountRequest.Size(m)
}
func (m *VolumeMountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeMountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeMountRequest proto.InternalMessageInfo

func (m *VolumeMountRequest) GetVolumdId() uint32 {
	if m != nil {
		return m.VolumdId
	}
	return 0
}

type VolumeMountResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeMountResponse) Reset()         { *m = VolumeMountResponse{} }
func (m *VolumeMountResponse) String() string { return proto.CompactTextString(m) }
func (*VolumeMountResponse) ProtoMessage()    {}
func (*VolumeMountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a683896b3b0ea3, []int{23}
}

func (m *VolumeMountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeMountResponse.Unmarshal(m, b)
}
func (m *VolumeMountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeMountResponse.Marshal(b, m, deterministic)
}
func (m *VolumeMountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeMountResponse.Merge(m, src)
}
func (m *VolumeMountResponse) XXX_Size() int {
	return xxx_messageInfo_VolumeMountResponse.Size(m)
}
func (m *VolumeMountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeMountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeMountResponse proto.InternalMessageInfo

type VolumeUnmountRequest struct {
	VolumdId             uint32   `protobuf:"varint,1,opt,name=volumd_id,json=volumdId,proto3" json:"volumd_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeUnmountRequest) Reset()         { *m = VolumeUnmountRequest{} }
func (m *VolumeUnmountRequest) String() string { return proto.CompactTextString(m) }
func (*VolumeUnmountRequest) ProtoMessage()    {}
func (*VolumeUnmountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a683896b3b0ea3, []int{24}
}

func (m *VolumeUnmountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeUnmountRequest.Unmarshal(m, b)
}
func (m *VolumeUnmountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeUnmountRequest.Marshal(b, m, deterministic)
}
func (m *VolumeUnmountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeUnmountRequest.Merge(m, src)
}
func (m *VolumeUnmountRequest) XXX_Size() int {
	return xxx_messageInfo_VolumeUnmountRequest.Size(m)
}
func (m *VolumeUnmountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeUnmountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeUnmountRequest proto.InternalMessageInfo

func (m *VolumeUnmountRequest) GetVolumdId() uint32 {
	if m != nil {
		return m.VolumdId
	}
	return 0
}

type VolumeUnmountResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeUnmountResponse) Reset()         { *m = VolumeUnmountResponse{} }
func (m *VolumeUnmountResponse) String() string { return proto.CompactTextString(m) }
func (*VolumeUnmountResponse) ProtoMessage()    {}
func (*VolumeUnmountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a683896b3b0ea3, []int{25}
}

func (m *VolumeUnmountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeUnmountResponse.Unmarshal(m, b)
}
func (m *VolumeUnmountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeUnmountResponse.Marshal(b, m, deterministic)
}
func (m *VolumeUnmountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeUnmountResponse.Merge(m, src)
}
func (m *VolumeUnmountResponse) XXX_Size() int {
	return xxx_messageInfo_VolumeUnmountResponse.Size(m)
}
func (m *VolumeUnmountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeUnmountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeUnmountResponse proto.InternalMessageInfo

type VolumeDeleteRequest struct {
	VolumdId             uint32   `protobuf:"varint,1,opt,name=volumd_id,json=volumdId,proto3" json:"volumd_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeDeleteRequest) Reset()         { *m = VolumeDeleteRequest{} }
func (m *VolumeDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*VolumeDeleteRequest) ProtoMessage()    {}
func (*VolumeDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a683896b3b0ea3, []int{26}
}

func (m *VolumeDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeDeleteRequest.Unmarshal(m, b)
}
func (m *VolumeDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeDeleteRequest.Marshal(b, m, deterministic)
}
func (m *VolumeDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeDeleteRequest.Merge(m, src)
}
func (m *VolumeDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_VolumeDeleteRequest.Size(m)
}
func (m *VolumeDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeDeleteRequest proto.InternalMessageInfo

func (m *VolumeDeleteRequest) GetVolumdId() uint32 {
	if m != nil {
		return m.VolumdId
	}
	return 0
}

type VolumeDeleteResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeDeleteResponse) Reset()         { *m = VolumeDeleteResponse{} }
func (m *VolumeDeleteResponse) String() string { return proto.CompactTextString(m) }
func (*VolumeDeleteResponse) ProtoMessage()    {}
func (*VolumeDeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a683896b3b0ea3, []int{27}
}

func (m *VolumeDeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeDeleteResponse.Unmarshal(m, b)
}
func (m *VolumeDeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeDeleteResponse.Marshal(b, m, deterministic)
}
func (m *VolumeDeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeDeleteResponse.Merge(m, src)
}
func (m *VolumeDeleteResponse) XXX_Size() int {
	return xxx_messageInfo_VolumeDeleteResponse.Size(m)
}
func (m *VolumeDeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeDeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeDeleteResponse proto.InternalMessageInfo

type VolumeUiPageRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeUiPageRequest) Reset()         { *m = VolumeUiPageRequest{} }
func (m *VolumeUiPageRequest) String() string { return proto.CompactTextString(m) }
func (*VolumeUiPageRequest) ProtoMessage()    {}
func (*VolumeUiPageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a683896b3b0ea3, []int{28}
}

func (m *VolumeUiPageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeUiPageRequest.Unmarshal(m, b)
}
func (m *VolumeUiPageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeUiPageRequest.Marshal(b, m, deterministic)
}
func (m *VolumeUiPageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeUiPageRequest.Merge(m, src)
}
func (m *VolumeUiPageRequest) XXX_Size() int {
	return xxx_messageInfo_VolumeUiPageRequest.Size(m)
}
func (m *VolumeUiPageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeUiPageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeUiPageRequest proto.InternalMessageInfo

type VolumeUiPageResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeUiPageResponse) Reset()         { *m = VolumeUiPageResponse{} }
func (m *VolumeUiPageResponse) String() string { return proto.CompactTextString(m) }
func (*VolumeUiPageResponse) ProtoMessage()    {}
func (*VolumeUiPageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a683896b3b0ea3, []int{29}
}

func (m *VolumeUiPageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeUiPageResponse.Unmarshal(m, b)
}
func (m *VolumeUiPageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeUiPageResponse.Marshal(b, m, deterministic)
}
func (m *VolumeUiPageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeUiPageResponse.Merge(m, src)
}
func (m *VolumeUiPageResponse) XXX_Size() int {
	return xxx_messageInfo_VolumeUiPageResponse.Size(m)
}
func (m *VolumeUiPageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeUiPageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeUiPageResponse proto.InternalMessageInfo

type DiskStatus struct {
	Dir                  string   `protobuf:"bytes,1,opt,name=dir,proto3" json:"dir,omitempty"`
	All                  uint64   `protobuf:"varint,2,opt,name=all,proto3" json:"all,omitempty"`
	Used                 uint64   `protobuf:"varint,3,opt,name=used,proto3" json:"used,omitempty"`
	Free                 uint64   `protobuf:"varint,4,opt,name=free,proto3" json:"free,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiskStatus) Reset()         { *m = DiskStatus{} }
func (m *DiskStatus) String() string { return proto.CompactTextString(m) }
func (*DiskStatus) ProtoMessage()    {}
func (*DiskStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a683896b3b0ea3, []int{30}
}

func (m *DiskStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiskStatus.Unmarshal(m, b)
}
func (m *DiskStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiskStatus.Marshal(b, m, deterministic)
}
func (m *DiskStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiskStatus.Merge(m, src)
}
func (m *DiskStatus) XXX_Size() int {
	return xxx_messageInfo_DiskStatus.Size(m)
}
func (m *DiskStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_DiskStatus.DiscardUnknown(m)
}

var xxx_messageInfo_DiskStatus proto.InternalMessageInfo

func (m *DiskStatus) GetDir() string {
	if m != nil {
		return m.Dir
	}
	return ""
}

func (m *DiskStatus) GetAll() uint64 {
	if m != nil {
		return m.All
	}
	return 0
}

func (m *DiskStatus) GetUsed() uint64 {
	if m != nil {
		return m.Used
	}
	return 0
}

func (m *DiskStatus) GetFree() uint64 {
	if m != nil {
		return m.Free
	}
	return 0
}

type MemStatus struct {
	Goroutines           int32    `protobuf:"varint,1,opt,name=goroutines,proto3" json:"goroutines,omitempty"`
	All                  uint64   `protobuf:"varint,2,opt,name=all,proto3" json:"all,omitempty"`
	Used                 uint64   `protobuf:"varint,3,opt,name=used,proto3" json:"used,omitempty"`
	Free                 uint64   `protobuf:"varint,4,opt,name=free,proto3" json:"free,omitempty"`
	Self                 uint64   `protobuf:"varint,5,opt,name=self,proto3" json:"self,omitempty"`
	Heap                 uint64   `protobuf:"varint,6,opt,name=heap,proto3" json:"heap,omitempty"`
	Stack                uint64   `protobuf:"varint,7,opt,name=stack,proto3" json:"stack,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MemStatus) Reset()         { *m = MemStatus{} }
func (m *MemStatus) String() string { return proto.CompactTextString(m) }
func (*MemStatus) ProtoMessage()    {}
func (*MemStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a683896b3b0ea3, []int{31}
}

func (m *MemStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MemStatus.Unmarshal(m, b)
}
func (m *MemStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MemStatus.Marshal(b, m, deterministic)
}
func (m *MemStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MemStatus.Merge(m, src)
}
func (m *MemStatus) XXX_Size() int {
	return xxx_messageInfo_MemStatus.Size(m)
}
func (m *MemStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_MemStatus.DiscardUnknown(m)
}

var xxx_messageInfo_MemStatus proto.InternalMessageInfo

func (m *MemStatus) GetGoroutines() int32 {
	if m != nil {
		return m.Goroutines
	}
	return 0
}

func (m *MemStatus) GetAll() uint64 {
	if m != nil {
		return m.All
	}
	return 0
}

func (m *MemStatus) GetUsed() uint64 {
	if m != nil {
		return m.Used
	}
	return 0
}

func (m *MemStatus) GetFree() uint64 {
	if m != nil {
		return m.Free
	}
	return 0
}

func (m *MemStatus) GetSelf() uint64 {
	if m != nil {
		return m.Self
	}
	return 0
}

func (m *MemStatus) GetHeap() uint64 {
	if m != nil {
		return m.Heap
	}
	return 0
}

func (m *MemStatus) GetStack() uint64 {
	if m != nil {
		return m.Stack
	}
	return 0
}

func init() {
	proto.RegisterType((*BatchDeleteRequest)(nil), "volume_server_pb.BatchDeleteRequest")
	proto.RegisterType((*BatchDeleteResponse)(nil), "volume_server_pb.BatchDeleteResponse")
	proto.RegisterType((*DeleteResult)(nil), "volume_server_pb.DeleteResult")
	proto.RegisterType((*Empty)(nil), "volume_server_pb.Empty")
	proto.RegisterType((*VacuumVolumeCheckRequest)(nil), "volume_server_pb.VacuumVolumeCheckRequest")
	proto.RegisterType((*VacuumVolumeCheckResponse)(nil), "volume_server_pb.VacuumVolumeCheckResponse")
	proto.RegisterType((*VacuumVolumeCompactRequest)(nil), "volume_server_pb.VacuumVolumeCompactRequest")
	proto.RegisterType((*VacuumVolumeCompactResponse)(nil), "volume_server_pb.VacuumVolumeCompactResponse")
	proto.RegisterType((*VacuumVolumeCommitRequest)(nil), "volume_server_pb.VacuumVolumeCommitRequest")
	proto.RegisterType((*VacuumVolumeCommitResponse)(nil), "volume_server_pb.VacuumVolumeCommitResponse")
	proto.RegisterType((*VacuumVolumeCleanupRequest)(nil), "volume_server_pb.VacuumVolumeCleanupRequest")
	proto.RegisterType((*VacuumVolumeCleanupResponse)(nil), "volume_server_pb.VacuumVolumeCleanupResponse")
	proto.RegisterType((*DeleteCollectionRequest)(nil), "volume_server_pb.DeleteCollectionRequest")
	proto.RegisterType((*DeleteCollectionResponse)(nil), "volume_server_pb.DeleteCollectionResponse")
	proto.RegisterType((*AssignVolumeRequest)(nil), "volume_server_pb.AssignVolumeRequest")
	proto.RegisterType((*AssignVolumeResponse)(nil), "volume_server_pb.AssignVolumeResponse")
	proto.RegisterType((*VolumeSyncStatusRequest)(nil), "volume_server_pb.VolumeSyncStatusRequest")
	proto.RegisterType((*VolumeSyncStatusResponse)(nil), "volume_server_pb.VolumeSyncStatusResponse")
	proto.RegisterType((*VolumeSyncIndexRequest)(nil), "volume_server_pb.VolumeSyncIndexRequest")
	proto.RegisterType((*VolumeSyncIndexResponse)(nil), "volume_server_pb.VolumeSyncIndexResponse")
	proto.RegisterType((*VolumeSyncDataRequest)(nil), "volume_server_pb.VolumeSyncDataRequest")
	proto.RegisterType((*VolumeSyncDataResponse)(nil), "volume_server_pb.VolumeSyncDataResponse")
	proto.RegisterType((*VolumeMountRequest)(nil), "volume_server_pb.VolumeMountRequest")
	proto.RegisterType((*VolumeMountResponse)(nil), "volume_server_pb.VolumeMountResponse")
	proto.RegisterType((*VolumeUnmountRequest)(nil), "volume_server_pb.VolumeUnmountRequest")
	proto.RegisterType((*VolumeUnmountResponse)(nil), "volume_server_pb.VolumeUnmountResponse")
	proto.RegisterType((*VolumeDeleteRequest)(nil), "volume_server_pb.VolumeDeleteRequest")
	proto.RegisterType((*VolumeDeleteResponse)(nil), "volume_server_pb.VolumeDeleteResponse")
	proto.RegisterType((*VolumeUiPageRequest)(nil), "volume_server_pb.VolumeUiPageRequest")
	proto.RegisterType((*VolumeUiPageResponse)(nil), "volume_server_pb.VolumeUiPageResponse")
	proto.RegisterType((*DiskStatus)(nil), "volume_server_pb.DiskStatus")
	proto.RegisterType((*MemStatus)(nil), "volume_server_pb.MemStatus")
}

func init() { proto.RegisterFile("volume_server.proto", fileDescriptor_73a683896b3b0ea3) }

var fileDescriptor_73a683896b3b0ea3 = []byte{
	// 1044 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x57, 0xdd, 0x72, 0xdb, 0x44,
	0x14, 0x8e, 0x6a, 0x3b, 0x76, 0x8e, 0x6d, 0x6a, 0xd6, 0x69, 0xa2, 0xaa, 0x10, 0x8c, 0x80, 0xd4,
	0x69, 0x43, 0x80, 0x74, 0x80, 0x32, 0xdc, 0x00, 0x09, 0x30, 0xb9, 0xe8, 0x94, 0xd9, 0x4c, 0x3b,
	0xcc, 0xd0, 0x19, 0x8f, 0x22, 0xad, 0x9d, 0x25, 0xb2, 0xe4, 0x6a, 0x57, 0x99, 0x94, 0x37, 0xe1,
	0x9a, 0x1b, 0x9e, 0x8e, 0x17, 0xe0, 0x86, 0xd9, 0x1f, 0xd9, 0xfa, 0x73, 0x24, 0xe0, 0x6e, 0xf7,
	0xec, 0x39, 0xdf, 0xf9, 0xd9, 0xa3, 0xf3, 0xad, 0x60, 0x78, 0x1d, 0xfa, 0xf1, 0x9c, 0x4c, 0x18,
	0x89, 0xae, 0x49, 0x74, 0xb4, 0x88, 0x42, 0x1e, 0xa2, 0x41, 0x46, 0x38, 0x59, 0x5c, 0xd8, 0x9f,
	0x00, 0xfa, 0xce, 0xe1, 0xee, 0xe5, 0x29, 0xf1, 0x09, 0x27, 0x98, 0xbc, 0x8e, 0x09, 0xe3, 0xe8,
	0x3e, 0x74, 0xa6, 0xd4, 0x27, 0x13, 0xea, 0x31, 0xd3, 0x18, 0x35, 0xc6, 0x5b, 0xb8, 0x2d, 0xf6,
	0x67, 0x1e, 0xb3, 0x9f, 0xc3, 0x30, 0x63, 0xc0, 0x16, 0x61, 0xc0, 0x08, 0x7a, 0x0a, 0xed, 0x88,
	0xb0, 0xd8, 0xe7, 0xca, 0xa0, 0x7b, 0xbc, 0x77, 0x94, 0xf7, 0x75, 0xb4, 0x34, 0x89, 0x7d, 0x8e,
	0x13, 0x75, 0x9b, 0x42, 0x2f, 0x7d, 0x80, 0x76, 0xa1, 0xad, 0x7d, 0x9b, 0xc6, 0xc8, 0x18, 0x6f,
	0xe1, 0x4d, 0xe5, 0x1a, 0xed, 0xc0, 0x26, 0xe3, 0x0e, 0x8f, 0x99, 0x79, 0x67, 0x64, 0x8c, 0x5b,
	0x58, 0xef, 0xd0, 0x36, 0xb4, 0x48, 0x14, 0x85, 0x91, 0xd9, 0x90, 0xea, 0x6a, 0x83, 0x10, 0x34,
	0x19, 0xfd, 0x8d, 0x98, 0xcd, 0x91, 0x31, 0xee, 0x63, 0xb9, 0xb6, 0xdb, 0xd0, 0xfa, 0x7e, 0xbe,
	0xe0, 0x6f, 0xec, 0x2f, 0xc1, 0x7c, 0xe9, 0xb8, 0x71, 0x3c, 0x7f, 0x29, 0x63, 0x3c, 0xb9, 0x24,
	0xee, 0x55, 0x92, 0xfb, 0x03, 0xd8, 0x92, 0x91, 0x7b, 0x49, 0x04, 0x7d, 0xdc, 0x51, 0x82, 0x33,
	0xcf, 0xfe, 0x06, 0xee, 0x97, 0x18, 0xea, 0x1a, 0x7c, 0x00, 0xfd, 0x99, 0x13, 0x5d, 0x38, 0x33,
	0x32, 0x89, 0x1c, 0x4e, 0x43, 0x69, 0x6d, 0xe0, 0x9e, 0x16, 0x62, 0x21, 0xb3, 0x7f, 0x01, 0x2b,
	0x83, 0x10, 0xce, 0x17, 0x8e, 0xcb, 0xeb, 0x38, 0x47, 0x23, 0xe8, 0x2e, 0x22, 0xe2, 0xf8, 0x7e,
	0xe8, 0x3a, 0x9c, 0xc8, 0x2a, 0x34, 0x70, 0x5a, 0x64, 0xbf, 0x0b, 0x0f, 0x4a, 0xc1, 0x55, 0x80,
	0xf6, 0xd3, 0x5c, 0xf4, 0xe1, 0x7c, 0x4e, 0x6b, 0xb9, 0xb6, 0xdf, 0x29, 0x44, 0x2d, 0x2d, 0x35,
	0xee, 0x57, 0xb9, 0x53, 0x9f, 0x38, 0x41, 0xbc, 0xa8, 0x05, 0x9c, 0x8f, 0x38, 0x31, 0x5d, 0x22,
	0xef, 0xaa, 0xe6, 0x38, 0x09, 0x7d, 0x9f, 0xb8, 0x9c, 0x86, 0x41, 0x02, 0xbb, 0x07, 0xe0, 0x2e,
	0x85, 0xba, 0x55, 0x52, 0x12, 0xdb, 0x02, 0xb3, 0x68, 0xaa, 0x61, 0xff, 0x34, 0x60, 0xf8, 0x2d,
	0x63, 0x74, 0x16, 0x28, 0xb7, 0xb5, 0xca, 0x9f, 0x75, 0x78, 0x27, 0xef, 0x30, 0x7f, 0x3d, 0x8d,
	0xc2, 0xf5, 0x08, 0x8d, 0x88, 0x2c, 0x7c, 0xea, 0x3a, 0x12, 0xa2, 0x29, 0x21, 0xd2, 0x22, 0x34,
	0x80, 0x06, 0xe7, 0xbe, 0xd9, 0x92, 0x27, 0x62, 0x69, 0xef, 0xc0, 0x76, 0x36, 0x52, 0x9d, 0xc2,
	0x17, 0xb0, 0xab, 0x24, 0xe7, 0x6f, 0x02, 0xf7, 0x5c, 0x7e, 0x09, 0xb5, 0x0a, 0xfe, 0xb7, 0x01,
	0x66, 0xd1, 0x50, 0x77, 0xf0, 0xff, 0xcd, 0xff, 0xdf, 0x66, 0x87, 0xde, 0x83, 0x2e, 0x77, 0xa8,
	0x3f, 0x09, 0xa7, 0x53, 0x46, 0xb8, 0xb9, 0x39, 0x32, 0xc6, 0x4d, 0x0c, 0x42, 0xf4, 0x5c, 0x4a,
	0xd0, 0x01, 0x0c, 0x5c, 0xd5, 0xc5, 0x93, 0x88, 0x5c, 0x53, 0x26, 0x90, 0xdb, 0x32, 0xb0, 0xbb,
	0x6e, 0xd2, 0xdd, 0x4a, 0x8c, 0x6c, 0xe8, 0x53, 0xef, 0x66, 0x22, 0x87, 0x87, 0xfc, 0xf4, 0x3b,
	0x12, 0xad, 0x4b, 0xbd, 0x9b, 0x1f, 0xa8, 0x4f, 0xce, 0xc5, 0x04, 0xf8, 0x1c, 0x76, 0x56, 0xc9,
	0x9f, 0x05, 0x1e, 0xb9, 0xa9, 0x55, 0xb4, 0x1f, 0xd3, 0xc5, 0xd6, 0x66, 0xba, 0x64, 0x87, 0x80,
	0xa8, 0x10, 0x28, 0xbf, 0x6e, 0x18, 0x70, 0x12, 0x70, 0x09, 0xd0, 0xc3, 0x03, 0x79, 0x22, 0x9c,
	0x9f, 0x28, 0xb9, 0xfd, 0xbb, 0x01, 0xf7, 0x56, 0x48, 0xa7, 0x0e, 0x77, 0x6a, 0xb5, 0x9e, 0x05,
	0x9d, 0x65, 0xf6, 0x77, 0xd4, 0x59, 0xb2, 0x17, 0x63, 0x51, 0x57, 0xaf, 0x21, 0x4f, 0xf4, 0xae,
	0x6c, 0x00, 0x0a, 0x27, 0x01, 0x21, 0x9e, 0x9a, 0xae, 0xea, 0x1a, 0x3a, 0x4a, 0x70, 0xe6, 0xd9,
	0x5f, 0xa7, 0x6b, 0xa3, 0x42, 0xd3, 0x39, 0xbe, 0x0f, 0xbd, 0x92, 0xec, 0xba, 0xd3, 0x54, 0x62,
	0x9f, 0x01, 0x52, 0xc6, 0xcf, 0xc2, 0x38, 0xa8, 0x37, 0x53, 0xee, 0xc1, 0x30, 0x63, 0xa2, 0x1b,
	0xfb, 0x09, 0x6c, 0x2b, 0xf1, 0x8b, 0x60, 0x5e, 0x1b, 0x6b, 0x37, 0x29, 0xeb, 0xd2, 0x48, 0xa3,
	0x1d, 0x27, 0x4e, 0xb2, 0x04, 0x77, 0x2b, 0xd8, 0x4e, 0x12, 0x41, 0x96, 0xe3, 0x56, 0x01, 0xbf,
	0xa0, 0x3f, 0x89, 0x79, 0xae, 0xb0, 0x56, 0xea, 0x89, 0x58, 0xab, 0xff, 0x0c, 0x70, 0x4a, 0xd9,
	0x95, 0xfa, 0xc4, 0x44, 0xef, 0x7b, 0x34, 0xd2, 0x73, 0x4a, 0x2c, 0x85, 0xc4, 0xf1, 0x7d, 0x79,
	0x9f, 0x4d, 0x2c, 0x96, 0xe2, 0xca, 0x62, 0x46, 0x3c, 0x79, 0x91, 0x4d, 0x2c, 0xd7, 0x42, 0x36,
	0x8d, 0x88, 0xba, 0xc6, 0x26, 0x96, 0x6b, 0xfb, 0x0f, 0x03, 0xb6, 0x9e, 0x91, 0xb9, 0x46, 0xde,
	0x03, 0x98, 0x85, 0x51, 0x18, 0x73, 0x1a, 0x10, 0x26, 0x1d, 0xb4, 0x70, 0x4a, 0xf2, 0xdf, 0xfd,
	0xc8, 0x16, 0x22, 0xfe, 0x54, 0x76, 0x4a, 0x13, 0xcb, 0xb5, 0x90, 0x5d, 0x12, 0x67, 0xa1, 0x3f,
	0x55, 0xb9, 0x16, 0x0c, 0xcc, 0xb8, 0xe3, 0x5e, 0xc9, 0x2f, 0xb3, 0x89, 0xd5, 0xe6, 0xf8, 0x2f,
	0x80, 0x9e, 0x6e, 0x28, 0xf9, 0x04, 0x40, 0xaf, 0xa0, 0x9b, 0x7a, 0x3a, 0xa0, 0x0f, 0x8b, 0x2f,
	0x84, 0xe2, 0x53, 0xc4, 0xfa, 0xa8, 0x42, 0x4b, 0x17, 0x7b, 0x03, 0x05, 0xf0, 0x76, 0x81, 0x9a,
	0xd1, 0xa3, 0xa2, 0xf5, 0x3a, 0xe2, 0xb7, 0x1e, 0xd7, 0xd2, 0x5d, 0xfa, 0xe3, 0x30, 0x2c, 0xe1,
	0x5a, 0x74, 0x58, 0x81, 0x92, 0xe1, 0x7b, 0xeb, 0xe3, 0x9a, 0xda, 0x4b, 0xaf, 0xaf, 0x01, 0x15,
	0x89, 0x18, 0x3d, 0xae, 0x84, 0x59, 0x11, 0xbd, 0x75, 0x58, 0x4f, 0x79, 0x6d, 0xa2, 0x8a, 0xa2,
	0x2b, 0x13, 0xcd, 0x3c, 0x02, 0x2a, 0x13, 0xcd, 0xf1, 0xfe, 0x06, 0xba, 0x82, 0x41, 0x9e, 0xbe,
	0xd1, 0xc1, 0xba, 0x37, 0x65, 0xe1, 0x75, 0x60, 0x3d, 0xaa, 0xa3, 0xba, 0x74, 0x36, 0x81, 0x5e,
	0x9a, 0x64, 0x51, 0x49, 0xd3, 0x95, 0x3c, 0x17, 0xac, 0xfd, 0x2a, 0xb5, 0x74, 0x36, 0x79, 0xd2,
	0x2d, 0xcb, 0x66, 0x0d, 0xa3, 0x97, 0x65, 0xb3, 0x8e, 0xc3, 0xed, 0x0d, 0xf4, 0x2b, 0xdc, 0xcd,
	0xb1, 0x15, 0x1a, 0xdf, 0x06, 0x90, 0xe6, 0x41, 0xeb, 0xa0, 0x86, 0x66, 0xe2, 0xe9, 0x53, 0x03,
	0xcd, 0xe0, 0xad, 0x2c, 0x69, 0xa0, 0x87, 0xb7, 0x01, 0xa4, 0x18, 0xcf, 0x1a, 0x57, 0x2b, 0xa6,
	0x1c, 0xbd, 0x82, 0x6e, 0x8a, 0x2d, 0xca, 0x86, 0x47, 0x91, 0x7f, 0xca, 0x86, 0x47, 0x19, 0xe5,
	0x6c, 0xa0, 0x0b, 0xe8, 0x67, 0xf8, 0x03, 0xed, 0xaf, 0xb3, 0xcc, 0xb2, 0x92, 0xf5, 0xb0, 0x52,
	0x2f, 0xdd, 0x64, 0x69, 0x5a, 0x41, 0x6b, 0x83, 0xcb, 0x0e, 0xc0, 0xfd, 0x2a, 0xb5, 0xc4, 0xc1,
	0xc5, 0xa6, 0xfc, 0xc9, 0x7b, 0xf2, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xdb, 0x3c, 0x6d, 0xd7,
	0xfb, 0x0d, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// VolumeServerClient is the client API for VolumeServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VolumeServerClient interface {
	//Experts only: takes multiple fid parameters. This function does not propagate deletes to replicas.
	BatchDelete(ctx context.Context, in *BatchDeleteRequest, opts ...grpc.CallOption) (*BatchDeleteResponse, error)
	VacuumVolumeCheck(ctx context.Context, in *VacuumVolumeCheckRequest, opts ...grpc.CallOption) (*VacuumVolumeCheckResponse, error)
	VacuumVolumeCompact(ctx context.Context, in *VacuumVolumeCompactRequest, opts ...grpc.CallOption) (*VacuumVolumeCompactResponse, error)
	VacuumVolumeCommit(ctx context.Context, in *VacuumVolumeCommitRequest, opts ...grpc.CallOption) (*VacuumVolumeCommitResponse, error)
	VacuumVolumeCleanup(ctx context.Context, in *VacuumVolumeCleanupRequest, opts ...grpc.CallOption) (*VacuumVolumeCleanupResponse, error)
	DeleteCollection(ctx context.Context, in *DeleteCollectionRequest, opts ...grpc.CallOption) (*DeleteCollectionResponse, error)
	AssignVolume(ctx context.Context, in *AssignVolumeRequest, opts ...grpc.CallOption) (*AssignVolumeResponse, error)
	VolumeSyncStatus(ctx context.Context, in *VolumeSyncStatusRequest, opts ...grpc.CallOption) (*VolumeSyncStatusResponse, error)
	VolumeSyncIndex(ctx context.Context, in *VolumeSyncIndexRequest, opts ...grpc.CallOption) (VolumeServer_VolumeSyncIndexClient, error)
	VolumeSyncData(ctx context.Context, in *VolumeSyncDataRequest, opts ...grpc.CallOption) (VolumeServer_VolumeSyncDataClient, error)
	VolumeMount(ctx context.Context, in *VolumeMountRequest, opts ...grpc.CallOption) (*VolumeMountResponse, error)
	VolumeUnmount(ctx context.Context, in *VolumeUnmountRequest, opts ...grpc.CallOption) (*VolumeUnmountResponse, error)
	VolumeDelete(ctx context.Context, in *VolumeDeleteRequest, opts ...grpc.CallOption) (*VolumeDeleteResponse, error)
}

type volumeServerClient struct {
	cc *grpc.ClientConn
}

func NewVolumeServerClient(cc *grpc.ClientConn) VolumeServerClient {
	return &volumeServerClient{cc}
}

func (c *volumeServerClient) BatchDelete(ctx context.Context, in *BatchDeleteRequest, opts ...grpc.CallOption) (*BatchDeleteResponse, error) {
	out := new(BatchDeleteResponse)
	err := c.cc.Invoke(ctx, "/volume_server_pb.VolumeServer/BatchDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *volumeServerClient) VacuumVolumeCheck(ctx context.Context, in *VacuumVolumeCheckRequest, opts ...grpc.CallOption) (*VacuumVolumeCheckResponse, error) {
	out := new(VacuumVolumeCheckResponse)
	err := c.cc.Invoke(ctx, "/volume_server_pb.VolumeServer/VacuumVolumeCheck", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *volumeServerClient) VacuumVolumeCompact(ctx context.Context, in *VacuumVolumeCompactRequest, opts ...grpc.CallOption) (*VacuumVolumeCompactResponse, error) {
	out := new(VacuumVolumeCompactResponse)
	err := c.cc.Invoke(ctx, "/volume_server_pb.VolumeServer/VacuumVolumeCompact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *volumeServerClient) VacuumVolumeCommit(ctx context.Context, in *VacuumVolumeCommitRequest, opts ...grpc.CallOption) (*VacuumVolumeCommitResponse, error) {
	out := new(VacuumVolumeCommitResponse)
	err := c.cc.Invoke(ctx, "/volume_server_pb.VolumeServer/VacuumVolumeCommit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *volumeServerClient) VacuumVolumeCleanup(ctx context.Context, in *VacuumVolumeCleanupRequest, opts ...grpc.CallOption) (*VacuumVolumeCleanupResponse, error) {
	out := new(VacuumVolumeCleanupResponse)
	err := c.cc.Invoke(ctx, "/volume_server_pb.VolumeServer/VacuumVolumeCleanup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *volumeServerClient) DeleteCollection(ctx context.Context, in *DeleteCollectionRequest, opts ...grpc.CallOption) (*DeleteCollectionResponse, error) {
	out := new(DeleteCollectionResponse)
	err := c.cc.Invoke(ctx, "/volume_server_pb.VolumeServer/DeleteCollection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *volumeServerClient) AssignVolume(ctx context.Context, in *AssignVolumeRequest, opts ...grpc.CallOption) (*AssignVolumeResponse, error) {
	out := new(AssignVolumeResponse)
	err := c.cc.Invoke(ctx, "/volume_server_pb.VolumeServer/AssignVolume", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *volumeServerClient) VolumeSyncStatus(ctx context.Context, in *VolumeSyncStatusRequest, opts ...grpc.CallOption) (*VolumeSyncStatusResponse, error) {
	out := new(VolumeSyncStatusResponse)
	err := c.cc.Invoke(ctx, "/volume_server_pb.VolumeServer/VolumeSyncStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *volumeServerClient) VolumeSyncIndex(ctx context.Context, in *VolumeSyncIndexRequest, opts ...grpc.CallOption) (VolumeServer_VolumeSyncIndexClient, error) {
	stream, err := c.cc.NewStream(ctx, &_VolumeServer_serviceDesc.Streams[0], "/volume_server_pb.VolumeServer/VolumeSyncIndex", opts...)
	if err != nil {
		return nil, err
	}
	x := &volumeServerVolumeSyncIndexClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type VolumeServer_VolumeSyncIndexClient interface {
	Recv() (*VolumeSyncIndexResponse, error)
	grpc.ClientStream
}

type volumeServerVolumeSyncIndexClient struct {
	grpc.ClientStream
}

func (x *volumeServerVolumeSyncIndexClient) Recv() (*VolumeSyncIndexResponse, error) {
	m := new(VolumeSyncIndexResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *volumeServerClient) VolumeSyncData(ctx context.Context, in *VolumeSyncDataRequest, opts ...grpc.CallOption) (VolumeServer_VolumeSyncDataClient, error) {
	stream, err := c.cc.NewStream(ctx, &_VolumeServer_serviceDesc.Streams[1], "/volume_server_pb.VolumeServer/VolumeSyncData", opts...)
	if err != nil {
		return nil, err
	}
	x := &volumeServerVolumeSyncDataClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type VolumeServer_VolumeSyncDataClient interface {
	Recv() (*VolumeSyncDataResponse, error)
	grpc.ClientStream
}

type volumeServerVolumeSyncDataClient struct {
	grpc.ClientStream
}

func (x *volumeServerVolumeSyncDataClient) Recv() (*VolumeSyncDataResponse, error) {
	m := new(VolumeSyncDataResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *volumeServerClient) VolumeMount(ctx context.Context, in *VolumeMountRequest, opts ...grpc.CallOption) (*VolumeMountResponse, error) {
	out := new(VolumeMountResponse)
	err := c.cc.Invoke(ctx, "/volume_server_pb.VolumeServer/VolumeMount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *volumeServerClient) VolumeUnmount(ctx context.Context, in *VolumeUnmountRequest, opts ...grpc.CallOption) (*VolumeUnmountResponse, error) {
	out := new(VolumeUnmountResponse)
	err := c.cc.Invoke(ctx, "/volume_server_pb.VolumeServer/VolumeUnmount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *volumeServerClient) VolumeDelete(ctx context.Context, in *VolumeDeleteRequest, opts ...grpc.CallOption) (*VolumeDeleteResponse, error) {
	out := new(VolumeDeleteResponse)
	err := c.cc.Invoke(ctx, "/volume_server_pb.VolumeServer/VolumeDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VolumeServerServer is the server API for VolumeServer service.
type VolumeServerServer interface {
	//Experts only: takes multiple fid parameters. This function does not propagate deletes to replicas.
	BatchDelete(context.Context, *BatchDeleteRequest) (*BatchDeleteResponse, error)
	VacuumVolumeCheck(context.Context, *VacuumVolumeCheckRequest) (*VacuumVolumeCheckResponse, error)
	VacuumVolumeCompact(context.Context, *VacuumVolumeCompactRequest) (*VacuumVolumeCompactResponse, error)
	VacuumVolumeCommit(context.Context, *VacuumVolumeCommitRequest) (*VacuumVolumeCommitResponse, error)
	VacuumVolumeCleanup(context.Context, *VacuumVolumeCleanupRequest) (*VacuumVolumeCleanupResponse, error)
	DeleteCollection(context.Context, *DeleteCollectionRequest) (*DeleteCollectionResponse, error)
	AssignVolume(context.Context, *AssignVolumeRequest) (*AssignVolumeResponse, error)
	VolumeSyncStatus(context.Context, *VolumeSyncStatusRequest) (*VolumeSyncStatusResponse, error)
	VolumeSyncIndex(*VolumeSyncIndexRequest, VolumeServer_VolumeSyncIndexServer) error
	VolumeSyncData(*VolumeSyncDataRequest, VolumeServer_VolumeSyncDataServer) error
	VolumeMount(context.Context, *VolumeMountRequest) (*VolumeMountResponse, error)
	VolumeUnmount(context.Context, *VolumeUnmountRequest) (*VolumeUnmountResponse, error)
	VolumeDelete(context.Context, *VolumeDeleteRequest) (*VolumeDeleteResponse, error)
}

func RegisterVolumeServerServer(s *grpc.Server, srv VolumeServerServer) {
	s.RegisterService(&_VolumeServer_serviceDesc, srv)
}

func _VolumeServer_BatchDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BatchDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VolumeServerServer).BatchDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/volume_server_pb.VolumeServer/BatchDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VolumeServerServer).BatchDelete(ctx, req.(*BatchDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VolumeServer_VacuumVolumeCheck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VacuumVolumeCheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VolumeServerServer).VacuumVolumeCheck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/volume_server_pb.VolumeServer/VacuumVolumeCheck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VolumeServerServer).VacuumVolumeCheck(ctx, req.(*VacuumVolumeCheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VolumeServer_VacuumVolumeCompact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VacuumVolumeCompactRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VolumeServerServer).VacuumVolumeCompact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/volume_server_pb.VolumeServer/VacuumVolumeCompact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VolumeServerServer).VacuumVolumeCompact(ctx, req.(*VacuumVolumeCompactRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VolumeServer_VacuumVolumeCommit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VacuumVolumeCommitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VolumeServerServer).VacuumVolumeCommit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/volume_server_pb.VolumeServer/VacuumVolumeCommit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VolumeServerServer).VacuumVolumeCommit(ctx, req.(*VacuumVolumeCommitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VolumeServer_VacuumVolumeCleanup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VacuumVolumeCleanupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VolumeServerServer).VacuumVolumeCleanup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/volume_server_pb.VolumeServer/VacuumVolumeCleanup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VolumeServerServer).VacuumVolumeCleanup(ctx, req.(*VacuumVolumeCleanupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VolumeServer_DeleteCollection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCollectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VolumeServerServer).DeleteCollection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/volume_server_pb.VolumeServer/DeleteCollection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VolumeServerServer).DeleteCollection(ctx, req.(*DeleteCollectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VolumeServer_AssignVolume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AssignVolumeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VolumeServerServer).AssignVolume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/volume_server_pb.VolumeServer/AssignVolume",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VolumeServerServer).AssignVolume(ctx, req.(*AssignVolumeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VolumeServer_VolumeSyncStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VolumeSyncStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VolumeServerServer).VolumeSyncStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/volume_server_pb.VolumeServer/VolumeSyncStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VolumeServerServer).VolumeSyncStatus(ctx, req.(*VolumeSyncStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VolumeServer_VolumeSyncIndex_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(VolumeSyncIndexRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(VolumeServerServer).VolumeSyncIndex(m, &volumeServerVolumeSyncIndexServer{stream})
}

type VolumeServer_VolumeSyncIndexServer interface {
	Send(*VolumeSyncIndexResponse) error
	grpc.ServerStream
}

type volumeServerVolumeSyncIndexServer struct {
	grpc.ServerStream
}

func (x *volumeServerVolumeSyncIndexServer) Send(m *VolumeSyncIndexResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _VolumeServer_VolumeSyncData_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(VolumeSyncDataRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(VolumeServerServer).VolumeSyncData(m, &volumeServerVolumeSyncDataServer{stream})
}

type VolumeServer_VolumeSyncDataServer interface {
	Send(*VolumeSyncDataResponse) error
	grpc.ServerStream
}

type volumeServerVolumeSyncDataServer struct {
	grpc.ServerStream
}

func (x *volumeServerVolumeSyncDataServer) Send(m *VolumeSyncDataResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _VolumeServer_VolumeMount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VolumeMountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VolumeServerServer).VolumeMount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/volume_server_pb.VolumeServer/VolumeMount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VolumeServerServer).VolumeMount(ctx, req.(*VolumeMountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VolumeServer_VolumeUnmount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VolumeUnmountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VolumeServerServer).VolumeUnmount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/volume_server_pb.VolumeServer/VolumeUnmount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VolumeServerServer).VolumeUnmount(ctx, req.(*VolumeUnmountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VolumeServer_VolumeDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VolumeDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VolumeServerServer).VolumeDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/volume_server_pb.VolumeServer/VolumeDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VolumeServerServer).VolumeDelete(ctx, req.(*VolumeDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _VolumeServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "volume_server_pb.VolumeServer",
	HandlerType: (*VolumeServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "BatchDelete",
			Handler:    _VolumeServer_BatchDelete_Handler,
		},
		{
			MethodName: "VacuumVolumeCheck",
			Handler:    _VolumeServer_VacuumVolumeCheck_Handler,
		},
		{
			MethodName: "VacuumVolumeCompact",
			Handler:    _VolumeServer_VacuumVolumeCompact_Handler,
		},
		{
			MethodName: "VacuumVolumeCommit",
			Handler:    _VolumeServer_VacuumVolumeCommit_Handler,
		},
		{
			MethodName: "VacuumVolumeCleanup",
			Handler:    _VolumeServer_VacuumVolumeCleanup_Handler,
		},
		{
			MethodName: "DeleteCollection",
			Handler:    _VolumeServer_DeleteCollection_Handler,
		},
		{
			MethodName: "AssignVolume",
			Handler:    _VolumeServer_AssignVolume_Handler,
		},
		{
			MethodName: "VolumeSyncStatus",
			Handler:    _VolumeServer_VolumeSyncStatus_Handler,
		},
		{
			MethodName: "VolumeMount",
			Handler:    _VolumeServer_VolumeMount_Handler,
		},
		{
			MethodName: "VolumeUnmount",
			Handler:    _VolumeServer_VolumeUnmount_Handler,
		},
		{
			MethodName: "VolumeDelete",
			Handler:    _VolumeServer_VolumeDelete_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "VolumeSyncIndex",
			Handler:       _VolumeServer_VolumeSyncIndex_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "VolumeSyncData",
			Handler:       _VolumeServer_VolumeSyncData_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "volume_server.proto",
}
