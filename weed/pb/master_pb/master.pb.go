// Code generated by protoc-gen-go. DO NOT EDIT.
// source: master.proto

package master_pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Heartbeat struct {
	Ip             string                      `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Port           uint32                      `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	PublicUrl      string                      `protobuf:"bytes,3,opt,name=public_url,json=publicUrl,proto3" json:"public_url,omitempty"`
	MaxVolumeCount uint32                      `protobuf:"varint,4,opt,name=max_volume_count,json=maxVolumeCount,proto3" json:"max_volume_count,omitempty"`
	MaxFileKey     uint64                      `protobuf:"varint,5,opt,name=max_file_key,json=maxFileKey,proto3" json:"max_file_key,omitempty"`
	DataCenter     string                      `protobuf:"bytes,6,opt,name=data_center,json=dataCenter,proto3" json:"data_center,omitempty"`
	Rack           string                      `protobuf:"bytes,7,opt,name=rack,proto3" json:"rack,omitempty"`
	AdminPort      uint32                      `protobuf:"varint,8,opt,name=admin_port,json=adminPort,proto3" json:"admin_port,omitempty"`
	Volumes        []*VolumeInformationMessage `protobuf:"bytes,9,rep,name=volumes,proto3" json:"volumes,omitempty"`
	// delta volume ids
	NewVids              []uint32 `protobuf:"varint,10,rep,packed,name=new_vids,json=newVids,proto3" json:"new_vids,omitempty"`
	DeletedVids          []uint32 `protobuf:"varint,11,rep,packed,name=deleted_vids,json=deletedVids,proto3" json:"deleted_vids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Heartbeat) Reset()         { *m = Heartbeat{} }
func (m *Heartbeat) String() string { return proto.CompactTextString(m) }
func (*Heartbeat) ProtoMessage()    {}
func (*Heartbeat) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9c348dec43a6705, []int{0}
}

func (m *Heartbeat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Heartbeat.Unmarshal(m, b)
}
func (m *Heartbeat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Heartbeat.Marshal(b, m, deterministic)
}
func (m *Heartbeat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Heartbeat.Merge(m, src)
}
func (m *Heartbeat) XXX_Size() int {
	return xxx_messageInfo_Heartbeat.Size(m)
}
func (m *Heartbeat) XXX_DiscardUnknown() {
	xxx_messageInfo_Heartbeat.DiscardUnknown(m)
}

var xxx_messageInfo_Heartbeat proto.InternalMessageInfo

func (m *Heartbeat) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *Heartbeat) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *Heartbeat) GetPublicUrl() string {
	if m != nil {
		return m.PublicUrl
	}
	return ""
}

func (m *Heartbeat) GetMaxVolumeCount() uint32 {
	if m != nil {
		return m.MaxVolumeCount
	}
	return 0
}

func (m *Heartbeat) GetMaxFileKey() uint64 {
	if m != nil {
		return m.MaxFileKey
	}
	return 0
}

func (m *Heartbeat) GetDataCenter() string {
	if m != nil {
		return m.DataCenter
	}
	return ""
}

func (m *Heartbeat) GetRack() string {
	if m != nil {
		return m.Rack
	}
	return ""
}

func (m *Heartbeat) GetAdminPort() uint32 {
	if m != nil {
		return m.AdminPort
	}
	return 0
}

func (m *Heartbeat) GetVolumes() []*VolumeInformationMessage {
	if m != nil {
		return m.Volumes
	}
	return nil
}

func (m *Heartbeat) GetNewVids() []uint32 {
	if m != nil {
		return m.NewVids
	}
	return nil
}

func (m *Heartbeat) GetDeletedVids() []uint32 {
	if m != nil {
		return m.DeletedVids
	}
	return nil
}

type HeartbeatResponse struct {
	VolumeSizeLimit      uint64   `protobuf:"varint,1,opt,name=volumeSizeLimit,proto3" json:"volumeSizeLimit,omitempty"`
	SecretKey            string   `protobuf:"bytes,2,opt,name=secretKey,proto3" json:"secretKey,omitempty"`
	Leader               string   `protobuf:"bytes,3,opt,name=leader,proto3" json:"leader,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HeartbeatResponse) Reset()         { *m = HeartbeatResponse{} }
func (m *HeartbeatResponse) String() string { return proto.CompactTextString(m) }
func (*HeartbeatResponse) ProtoMessage()    {}
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9c348dec43a6705, []int{1}
}

func (m *HeartbeatResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeartbeatResponse.Unmarshal(m, b)
}
func (m *HeartbeatResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeartbeatResponse.Marshal(b, m, deterministic)
}
func (m *HeartbeatResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeartbeatResponse.Merge(m, src)
}
func (m *HeartbeatResponse) XXX_Size() int {
	return xxx_messageInfo_HeartbeatResponse.Size(m)
}
func (m *HeartbeatResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HeartbeatResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HeartbeatResponse proto.InternalMessageInfo

func (m *HeartbeatResponse) GetVolumeSizeLimit() uint64 {
	if m != nil {
		return m.VolumeSizeLimit
	}
	return 0
}

func (m *HeartbeatResponse) GetSecretKey() string {
	if m != nil {
		return m.SecretKey
	}
	return ""
}

func (m *HeartbeatResponse) GetLeader() string {
	if m != nil {
		return m.Leader
	}
	return ""
}

type VolumeInformationMessage struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Size                 uint64   `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Collection           string   `protobuf:"bytes,3,opt,name=collection,proto3" json:"collection,omitempty"`
	FileCount            uint64   `protobuf:"varint,4,opt,name=file_count,json=fileCount,proto3" json:"file_count,omitempty"`
	DeleteCount          uint64   `protobuf:"varint,5,opt,name=delete_count,json=deleteCount,proto3" json:"delete_count,omitempty"`
	DeletedByteCount     uint64   `protobuf:"varint,6,opt,name=deleted_byte_count,json=deletedByteCount,proto3" json:"deleted_byte_count,omitempty"`
	ReadOnly             bool     `protobuf:"varint,7,opt,name=read_only,json=readOnly,proto3" json:"read_only,omitempty"`
	ReplicaPlacement     uint32   `protobuf:"varint,8,opt,name=replica_placement,json=replicaPlacement,proto3" json:"replica_placement,omitempty"`
	Version              uint32   `protobuf:"varint,9,opt,name=version,proto3" json:"version,omitempty"`
	Ttl                  uint32   `protobuf:"varint,10,opt,name=ttl,proto3" json:"ttl,omitempty"`
	MemoryTotal          uint64   `protobuf:"varint,11,opt,name=memory_total,json=memoryTotal,proto3" json:"memory_total,omitempty"`
	MemoryFree           uint64   `protobuf:"varint,12,opt,name=memory_free,json=memoryFree,proto3" json:"memory_free,omitempty"`
	DiskWatermark        uint64   `protobuf:"varint,13,opt,name=disk_watermark,json=diskWatermark,proto3" json:"disk_watermark,omitempty"`
	DiskTotal            uint64   `protobuf:"varint,14,opt,name=disk_total,json=diskTotal,proto3" json:"disk_total,omitempty"`
	DiskFree             uint64   `protobuf:"varint,15,opt,name=disk_free,json=diskFree,proto3" json:"disk_free,omitempty"`
	DiskDevice           string   `protobuf:"bytes,16,opt,name=disk_device,json=diskDevice,proto3" json:"disk_device,omitempty"`
	DiskMountPoint       string   `protobuf:"bytes,17,opt,name=disk_mount_point,json=diskMountPoint,proto3" json:"disk_mount_point,omitempty"`
	Load1                float64  `protobuf:"fixed64,18,opt,name=load1,proto3" json:"load1,omitempty"`
	Load5                float64  `protobuf:"fixed64,19,opt,name=load5,proto3" json:"load5,omitempty"`
	Load15               float64  `protobuf:"fixed64,20,opt,name=load15,proto3" json:"load15,omitempty"`
	ProcessCpuUsage      float64  `protobuf:"fixed64,21,opt,name=process_cpu_usage,json=processCpuUsage,proto3" json:"process_cpu_usage,omitempty"`
	ProcessRss           uint64   `protobuf:"varint,22,opt,name=process_rss,json=processRss,proto3" json:"process_rss,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeInformationMessage) Reset()         { *m = VolumeInformationMessage{} }
func (m *VolumeInformationMessage) String() string { return proto.CompactTextString(m) }
func (*VolumeInformationMessage) ProtoMessage()    {}
func (*VolumeInformationMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9c348dec43a6705, []int{2}
}

func (m *VolumeInformationMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeInformationMessage.Unmarshal(m, b)
}
func (m *VolumeInformationMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeInformationMessage.Marshal(b, m, deterministic)
}
func (m *VolumeInformationMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeInformationMessage.Merge(m, src)
}
func (m *VolumeInformationMessage) XXX_Size() int {
	return xxx_messageInfo_VolumeInformationMessage.Size(m)
}
func (m *VolumeInformationMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeInformationMessage.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeInformationMessage proto.InternalMessageInfo

func (m *VolumeInformationMessage) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *VolumeInformationMessage) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *VolumeInformationMessage) GetCollection() string {
	if m != nil {
		return m.Collection
	}
	return ""
}

func (m *VolumeInformationMessage) GetFileCount() uint64 {
	if m != nil {
		return m.FileCount
	}
	return 0
}

func (m *VolumeInformationMessage) GetDeleteCount() uint64 {
	if m != nil {
		return m.DeleteCount
	}
	return 0
}

func (m *VolumeInformationMessage) GetDeletedByteCount() uint64 {
	if m != nil {
		return m.DeletedByteCount
	}
	return 0
}

func (m *VolumeInformationMessage) GetReadOnly() bool {
	if m != nil {
		return m.ReadOnly
	}
	return false
}

func (m *VolumeInformationMessage) GetReplicaPlacement() uint32 {
	if m != nil {
		return m.ReplicaPlacement
	}
	return 0
}

func (m *VolumeInformationMessage) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *VolumeInformationMessage) GetTtl() uint32 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

func (m *VolumeInformationMessage) GetMemoryTotal() uint64 {
	if m != nil {
		return m.MemoryTotal
	}
	return 0
}

func (m *VolumeInformationMessage) GetMemoryFree() uint64 {
	if m != nil {
		return m.MemoryFree
	}
	return 0
}

func (m *VolumeInformationMessage) GetDiskWatermark() uint64 {
	if m != nil {
		return m.DiskWatermark
	}
	return 0
}

func (m *VolumeInformationMessage) GetDiskTotal() uint64 {
	if m != nil {
		return m.DiskTotal
	}
	return 0
}

func (m *VolumeInformationMessage) GetDiskFree() uint64 {
	if m != nil {
		return m.DiskFree
	}
	return 0
}

func (m *VolumeInformationMessage) GetDiskDevice() string {
	if m != nil {
		return m.DiskDevice
	}
	return ""
}

func (m *VolumeInformationMessage) GetDiskMountPoint() string {
	if m != nil {
		return m.DiskMountPoint
	}
	return ""
}

func (m *VolumeInformationMessage) GetLoad1() float64 {
	if m != nil {
		return m.Load1
	}
	return 0
}

func (m *VolumeInformationMessage) GetLoad5() float64 {
	if m != nil {
		return m.Load5
	}
	return 0
}

func (m *VolumeInformationMessage) GetLoad15() float64 {
	if m != nil {
		return m.Load15
	}
	return 0
}

func (m *VolumeInformationMessage) GetProcessCpuUsage() float64 {
	if m != nil {
		return m.ProcessCpuUsage
	}
	return 0
}

func (m *VolumeInformationMessage) GetProcessRss() uint64 {
	if m != nil {
		return m.ProcessRss
	}
	return 0
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9c348dec43a6705, []int{3}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type SuperBlockExtra struct {
	ErasureCoding        *SuperBlockExtra_ErasureCoding `protobuf:"bytes,1,opt,name=erasure_coding,json=erasureCoding,proto3" json:"erasure_coding,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *SuperBlockExtra) Reset()         { *m = SuperBlockExtra{} }
func (m *SuperBlockExtra) String() string { return proto.CompactTextString(m) }
func (*SuperBlockExtra) ProtoMessage()    {}
func (*SuperBlockExtra) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9c348dec43a6705, []int{4}
}

func (m *SuperBlockExtra) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuperBlockExtra.Unmarshal(m, b)
}
func (m *SuperBlockExtra) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuperBlockExtra.Marshal(b, m, deterministic)
}
func (m *SuperBlockExtra) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuperBlockExtra.Merge(m, src)
}
func (m *SuperBlockExtra) XXX_Size() int {
	return xxx_messageInfo_SuperBlockExtra.Size(m)
}
func (m *SuperBlockExtra) XXX_DiscardUnknown() {
	xxx_messageInfo_SuperBlockExtra.DiscardUnknown(m)
}

var xxx_messageInfo_SuperBlockExtra proto.InternalMessageInfo

func (m *SuperBlockExtra) GetErasureCoding() *SuperBlockExtra_ErasureCoding {
	if m != nil {
		return m.ErasureCoding
	}
	return nil
}

type SuperBlockExtra_ErasureCoding struct {
	Data                 uint32   `protobuf:"varint,1,opt,name=data,proto3" json:"data,omitempty"`
	Parity               uint32   `protobuf:"varint,2,opt,name=parity,proto3" json:"parity,omitempty"`
	VolumeIds            []uint32 `protobuf:"varint,3,rep,packed,name=volume_ids,json=volumeIds,proto3" json:"volume_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SuperBlockExtra_ErasureCoding) Reset()         { *m = SuperBlockExtra_ErasureCoding{} }
func (m *SuperBlockExtra_ErasureCoding) String() string { return proto.CompactTextString(m) }
func (*SuperBlockExtra_ErasureCoding) ProtoMessage()    {}
func (*SuperBlockExtra_ErasureCoding) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9c348dec43a6705, []int{4, 0}
}

func (m *SuperBlockExtra_ErasureCoding) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuperBlockExtra_ErasureCoding.Unmarshal(m, b)
}
func (m *SuperBlockExtra_ErasureCoding) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuperBlockExtra_ErasureCoding.Marshal(b, m, deterministic)
}
func (m *SuperBlockExtra_ErasureCoding) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuperBlockExtra_ErasureCoding.Merge(m, src)
}
func (m *SuperBlockExtra_ErasureCoding) XXX_Size() int {
	return xxx_messageInfo_SuperBlockExtra_ErasureCoding.Size(m)
}
func (m *SuperBlockExtra_ErasureCoding) XXX_DiscardUnknown() {
	xxx_messageInfo_SuperBlockExtra_ErasureCoding.DiscardUnknown(m)
}

var xxx_messageInfo_SuperBlockExtra_ErasureCoding proto.InternalMessageInfo

func (m *SuperBlockExtra_ErasureCoding) GetData() uint32 {
	if m != nil {
		return m.Data
	}
	return 0
}

func (m *SuperBlockExtra_ErasureCoding) GetParity() uint32 {
	if m != nil {
		return m.Parity
	}
	return 0
}

func (m *SuperBlockExtra_ErasureCoding) GetVolumeIds() []uint32 {
	if m != nil {
		return m.VolumeIds
	}
	return nil
}

type ClientListenRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientListenRequest) Reset()         { *m = ClientListenRequest{} }
func (m *ClientListenRequest) String() string { return proto.CompactTextString(m) }
func (*ClientListenRequest) ProtoMessage()    {}
func (*ClientListenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9c348dec43a6705, []int{5}
}

func (m *ClientListenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientListenRequest.Unmarshal(m, b)
}
func (m *ClientListenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientListenRequest.Marshal(b, m, deterministic)
}
func (m *ClientListenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientListenRequest.Merge(m, src)
}
func (m *ClientListenRequest) XXX_Size() int {
	return xxx_messageInfo_ClientListenRequest.Size(m)
}
func (m *ClientListenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientListenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClientListenRequest proto.InternalMessageInfo

func (m *ClientListenRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type VolumeLocation struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	PublicUrl            string   `protobuf:"bytes,2,opt,name=public_url,json=publicUrl,proto3" json:"public_url,omitempty"`
	NewVids              []uint32 `protobuf:"varint,3,rep,packed,name=new_vids,json=newVids,proto3" json:"new_vids,omitempty"`
	DeletedVids          []uint32 `protobuf:"varint,4,rep,packed,name=deleted_vids,json=deletedVids,proto3" json:"deleted_vids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeLocation) Reset()         { *m = VolumeLocation{} }
func (m *VolumeLocation) String() string { return proto.CompactTextString(m) }
func (*VolumeLocation) ProtoMessage()    {}
func (*VolumeLocation) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9c348dec43a6705, []int{6}
}

func (m *VolumeLocation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeLocation.Unmarshal(m, b)
}
func (m *VolumeLocation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeLocation.Marshal(b, m, deterministic)
}
func (m *VolumeLocation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeLocation.Merge(m, src)
}
func (m *VolumeLocation) XXX_Size() int {
	return xxx_messageInfo_VolumeLocation.Size(m)
}
func (m *VolumeLocation) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeLocation.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeLocation proto.InternalMessageInfo

func (m *VolumeLocation) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *VolumeLocation) GetPublicUrl() string {
	if m != nil {
		return m.PublicUrl
	}
	return ""
}

func (m *VolumeLocation) GetNewVids() []uint32 {
	if m != nil {
		return m.NewVids
	}
	return nil
}

func (m *VolumeLocation) GetDeletedVids() []uint32 {
	if m != nil {
		return m.DeletedVids
	}
	return nil
}

type LookupVolumeRequest struct {
	VolumeIds            []string `protobuf:"bytes,1,rep,name=volume_ids,json=volumeIds,proto3" json:"volume_ids,omitempty"`
	Collection           string   `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LookupVolumeRequest) Reset()         { *m = LookupVolumeRequest{} }
func (m *LookupVolumeRequest) String() string { return proto.CompactTextString(m) }
func (*LookupVolumeRequest) ProtoMessage()    {}
func (*LookupVolumeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9c348dec43a6705, []int{7}
}

func (m *LookupVolumeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupVolumeRequest.Unmarshal(m, b)
}
func (m *LookupVolumeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupVolumeRequest.Marshal(b, m, deterministic)
}
func (m *LookupVolumeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupVolumeRequest.Merge(m, src)
}
func (m *LookupVolumeRequest) XXX_Size() int {
	return xxx_messageInfo_LookupVolumeRequest.Size(m)
}
func (m *LookupVolumeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupVolumeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LookupVolumeRequest proto.InternalMessageInfo

func (m *LookupVolumeRequest) GetVolumeIds() []string {
	if m != nil {
		return m.VolumeIds
	}
	return nil
}

func (m *LookupVolumeRequest) GetCollection() string {
	if m != nil {
		return m.Collection
	}
	return ""
}

type LookupVolumeResponse struct {
	VolumeIdLocations    []*LookupVolumeResponse_VolumeIdLocation `protobuf:"bytes,1,rep,name=volume_id_locations,json=volumeIdLocations,proto3" json:"volume_id_locations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                 `json:"-"`
	XXX_unrecognized     []byte                                   `json:"-"`
	XXX_sizecache        int32                                    `json:"-"`
}

func (m *LookupVolumeResponse) Reset()         { *m = LookupVolumeResponse{} }
func (m *LookupVolumeResponse) String() string { return proto.CompactTextString(m) }
func (*LookupVolumeResponse) ProtoMessage()    {}
func (*LookupVolumeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9c348dec43a6705, []int{8}
}

func (m *LookupVolumeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupVolumeResponse.Unmarshal(m, b)
}
func (m *LookupVolumeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupVolumeResponse.Marshal(b, m, deterministic)
}
func (m *LookupVolumeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupVolumeResponse.Merge(m, src)
}
func (m *LookupVolumeResponse) XXX_Size() int {
	return xxx_messageInfo_LookupVolumeResponse.Size(m)
}
func (m *LookupVolumeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupVolumeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LookupVolumeResponse proto.InternalMessageInfo

func (m *LookupVolumeResponse) GetVolumeIdLocations() []*LookupVolumeResponse_VolumeIdLocation {
	if m != nil {
		return m.VolumeIdLocations
	}
	return nil
}

type LookupVolumeResponse_VolumeIdLocation struct {
	VolumeId             string      `protobuf:"bytes,1,opt,name=volume_id,json=volumeId,proto3" json:"volume_id,omitempty"`
	Locations            []*Location `protobuf:"bytes,2,rep,name=locations,proto3" json:"locations,omitempty"`
	Error                string      `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *LookupVolumeResponse_VolumeIdLocation) Reset()         { *m = LookupVolumeResponse_VolumeIdLocation{} }
func (m *LookupVolumeResponse_VolumeIdLocation) String() string { return proto.CompactTextString(m) }
func (*LookupVolumeResponse_VolumeIdLocation) ProtoMessage()    {}
func (*LookupVolumeResponse_VolumeIdLocation) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9c348dec43a6705, []int{8, 0}
}

func (m *LookupVolumeResponse_VolumeIdLocation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupVolumeResponse_VolumeIdLocation.Unmarshal(m, b)
}
func (m *LookupVolumeResponse_VolumeIdLocation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupVolumeResponse_VolumeIdLocation.Marshal(b, m, deterministic)
}
func (m *LookupVolumeResponse_VolumeIdLocation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupVolumeResponse_VolumeIdLocation.Merge(m, src)
}
func (m *LookupVolumeResponse_VolumeIdLocation) XXX_Size() int {
	return xxx_messageInfo_LookupVolumeResponse_VolumeIdLocation.Size(m)
}
func (m *LookupVolumeResponse_VolumeIdLocation) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupVolumeResponse_VolumeIdLocation.DiscardUnknown(m)
}

var xxx_messageInfo_LookupVolumeResponse_VolumeIdLocation proto.InternalMessageInfo

func (m *LookupVolumeResponse_VolumeIdLocation) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

func (m *LookupVolumeResponse_VolumeIdLocation) GetLocations() []*Location {
	if m != nil {
		return m.Locations
	}
	return nil
}

func (m *LookupVolumeResponse_VolumeIdLocation) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type Location struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	PublicUrl            string   `protobuf:"bytes,2,opt,name=public_url,json=publicUrl,proto3" json:"public_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Location) Reset()         { *m = Location{} }
func (m *Location) String() string { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()    {}
func (*Location) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9c348dec43a6705, []int{9}
}

func (m *Location) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Location.Unmarshal(m, b)
}
func (m *Location) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Location.Marshal(b, m, deterministic)
}
func (m *Location) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Location.Merge(m, src)
}
func (m *Location) XXX_Size() int {
	return xxx_messageInfo_Location.Size(m)
}
func (m *Location) XXX_DiscardUnknown() {
	xxx_messageInfo_Location.DiscardUnknown(m)
}

var xxx_messageInfo_Location proto.InternalMessageInfo

func (m *Location) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Location) GetPublicUrl() string {
	if m != nil {
		return m.PublicUrl
	}
	return ""
}

type AssignRequest struct {
	Count                uint64   `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Replication          string   `protobuf:"bytes,2,opt,name=replication,proto3" json:"replication,omitempty"`
	Collection           string   `protobuf:"bytes,3,opt,name=collection,proto3" json:"collection,omitempty"`
	Ttl                  string   `protobuf:"bytes,4,opt,name=ttl,proto3" json:"ttl,omitempty"`
	DataCenter           string   `protobuf:"bytes,5,opt,name=data_center,json=dataCenter,proto3" json:"data_center,omitempty"`
	Rack                 string   `protobuf:"bytes,6,opt,name=rack,proto3" json:"rack,omitempty"`
	DataNode             string   `protobuf:"bytes,7,opt,name=data_node,json=dataNode,proto3" json:"data_node,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AssignRequest) Reset()         { *m = AssignRequest{} }
func (m *AssignRequest) String() string { return proto.CompactTextString(m) }
func (*AssignRequest) ProtoMessage()    {}
func (*AssignRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9c348dec43a6705, []int{10}
}

func (m *AssignRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssignRequest.Unmarshal(m, b)
}
func (m *AssignRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssignRequest.Marshal(b, m, deterministic)
}
func (m *AssignRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssignRequest.Merge(m, src)
}
func (m *AssignRequest) XXX_Size() int {
	return xxx_messageInfo_AssignRequest.Size(m)
}
func (m *AssignRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AssignRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AssignRequest proto.InternalMessageInfo

func (m *AssignRequest) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *AssignRequest) GetReplication() string {
	if m != nil {
		return m.Replication
	}
	return ""
}

func (m *AssignRequest) GetCollection() string {
	if m != nil {
		return m.Collection
	}
	return ""
}

func (m *AssignRequest) GetTtl() string {
	if m != nil {
		return m.Ttl
	}
	return ""
}

func (m *AssignRequest) GetDataCenter() string {
	if m != nil {
		return m.DataCenter
	}
	return ""
}

func (m *AssignRequest) GetRack() string {
	if m != nil {
		return m.Rack
	}
	return ""
}

func (m *AssignRequest) GetDataNode() string {
	if m != nil {
		return m.DataNode
	}
	return ""
}

type AssignResponse struct {
	Fid                  string   `protobuf:"bytes,1,opt,name=fid,proto3" json:"fid,omitempty"`
	Url                  string   `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	PublicUrl            string   `protobuf:"bytes,3,opt,name=public_url,json=publicUrl,proto3" json:"public_url,omitempty"`
	Count                uint64   `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
	Error                string   `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AssignResponse) Reset()         { *m = AssignResponse{} }
func (m *AssignResponse) String() string { return proto.CompactTextString(m) }
func (*AssignResponse) ProtoMessage()    {}
func (*AssignResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9c348dec43a6705, []int{11}
}

func (m *AssignResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssignResponse.Unmarshal(m, b)
}
func (m *AssignResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssignResponse.Marshal(b, m, deterministic)
}
func (m *AssignResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssignResponse.Merge(m, src)
}
func (m *AssignResponse) XXX_Size() int {
	return xxx_messageInfo_AssignResponse.Size(m)
}
func (m *AssignResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AssignResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AssignResponse proto.InternalMessageInfo

func (m *AssignResponse) GetFid() string {
	if m != nil {
		return m.Fid
	}
	return ""
}

func (m *AssignResponse) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *AssignResponse) GetPublicUrl() string {
	if m != nil {
		return m.PublicUrl
	}
	return ""
}

func (m *AssignResponse) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *AssignResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type StatisticsRequest struct {
	Replication          string   `protobuf:"bytes,1,opt,name=replication,proto3" json:"replication,omitempty"`
	Collection           string   `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	Ttl                  string   `protobuf:"bytes,3,opt,name=ttl,proto3" json:"ttl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatisticsRequest) Reset()         { *m = StatisticsRequest{} }
func (m *StatisticsRequest) String() string { return proto.CompactTextString(m) }
func (*StatisticsRequest) ProtoMessage()    {}
func (*StatisticsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9c348dec43a6705, []int{12}
}

func (m *StatisticsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatisticsRequest.Unmarshal(m, b)
}
func (m *StatisticsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatisticsRequest.Marshal(b, m, deterministic)
}
func (m *StatisticsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatisticsRequest.Merge(m, src)
}
func (m *StatisticsRequest) XXX_Size() int {
	return xxx_messageInfo_StatisticsRequest.Size(m)
}
func (m *StatisticsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatisticsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StatisticsRequest proto.InternalMessageInfo

func (m *StatisticsRequest) GetReplication() string {
	if m != nil {
		return m.Replication
	}
	return ""
}

func (m *StatisticsRequest) GetCollection() string {
	if m != nil {
		return m.Collection
	}
	return ""
}

func (m *StatisticsRequest) GetTtl() string {
	if m != nil {
		return m.Ttl
	}
	return ""
}

type StatisticsResponse struct {
	Replication          string   `protobuf:"bytes,1,opt,name=replication,proto3" json:"replication,omitempty"`
	Collection           string   `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	Ttl                  string   `protobuf:"bytes,3,opt,name=ttl,proto3" json:"ttl,omitempty"`
	TotalSize            uint64   `protobuf:"varint,4,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	UsedSize             uint64   `protobuf:"varint,5,opt,name=used_size,json=usedSize,proto3" json:"used_size,omitempty"`
	FileCount            uint64   `protobuf:"varint,6,opt,name=file_count,json=fileCount,proto3" json:"file_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatisticsResponse) Reset()         { *m = StatisticsResponse{} }
func (m *StatisticsResponse) String() string { return proto.CompactTextString(m) }
func (*StatisticsResponse) ProtoMessage()    {}
func (*StatisticsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9c348dec43a6705, []int{13}
}

func (m *StatisticsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatisticsResponse.Unmarshal(m, b)
}
func (m *StatisticsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatisticsResponse.Marshal(b, m, deterministic)
}
func (m *StatisticsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatisticsResponse.Merge(m, src)
}
func (m *StatisticsResponse) XXX_Size() int {
	return xxx_messageInfo_StatisticsResponse.Size(m)
}
func (m *StatisticsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StatisticsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StatisticsResponse proto.InternalMessageInfo

func (m *StatisticsResponse) GetReplication() string {
	if m != nil {
		return m.Replication
	}
	return ""
}

func (m *StatisticsResponse) GetCollection() string {
	if m != nil {
		return m.Collection
	}
	return ""
}

func (m *StatisticsResponse) GetTtl() string {
	if m != nil {
		return m.Ttl
	}
	return ""
}

func (m *StatisticsResponse) GetTotalSize() uint64 {
	if m != nil {
		return m.TotalSize
	}
	return 0
}

func (m *StatisticsResponse) GetUsedSize() uint64 {
	if m != nil {
		return m.UsedSize
	}
	return 0
}

func (m *StatisticsResponse) GetFileCount() uint64 {
	if m != nil {
		return m.FileCount
	}
	return 0
}

func init() {
	proto.RegisterType((*Heartbeat)(nil), "master_pb.Heartbeat")
	proto.RegisterType((*HeartbeatResponse)(nil), "master_pb.HeartbeatResponse")
	proto.RegisterType((*VolumeInformationMessage)(nil), "master_pb.VolumeInformationMessage")
	proto.RegisterType((*Empty)(nil), "master_pb.Empty")
	proto.RegisterType((*SuperBlockExtra)(nil), "master_pb.SuperBlockExtra")
	proto.RegisterType((*SuperBlockExtra_ErasureCoding)(nil), "master_pb.SuperBlockExtra.ErasureCoding")
	proto.RegisterType((*ClientListenRequest)(nil), "master_pb.ClientListenRequest")
	proto.RegisterType((*VolumeLocation)(nil), "master_pb.VolumeLocation")
	proto.RegisterType((*LookupVolumeRequest)(nil), "master_pb.LookupVolumeRequest")
	proto.RegisterType((*LookupVolumeResponse)(nil), "master_pb.LookupVolumeResponse")
	proto.RegisterType((*LookupVolumeResponse_VolumeIdLocation)(nil), "master_pb.LookupVolumeResponse.VolumeIdLocation")
	proto.RegisterType((*Location)(nil), "master_pb.Location")
	proto.RegisterType((*AssignRequest)(nil), "master_pb.AssignRequest")
	proto.RegisterType((*AssignResponse)(nil), "master_pb.AssignResponse")
	proto.RegisterType((*StatisticsRequest)(nil), "master_pb.StatisticsRequest")
	proto.RegisterType((*StatisticsResponse)(nil), "master_pb.StatisticsResponse")
}

func init() { proto.RegisterFile("master.proto", fileDescriptor_f9c348dec43a6705) }

var fileDescriptor_f9c348dec43a6705 = []byte{
	// 1249 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0x4d, 0x6f, 0x1b, 0x37,
	0x13, 0xce, 0x4a, 0xb2, 0x2c, 0x8d, 0x2c, 0x5b, 0xa6, 0xfd, 0x06, 0x1b, 0xe7, 0x4b, 0xef, 0x16,
	0x05, 0xd4, 0x0f, 0x18, 0x89, 0x8b, 0x9c, 0x8a, 0xa2, 0x68, 0xdc, 0x04, 0x0d, 0xec, 0x34, 0xee,
	0x3a, 0x49, 0x81, 0x5e, 0xb6, 0xf4, 0xee, 0xd8, 0x20, 0xb4, 0x5f, 0x25, 0x29, 0xdb, 0xca, 0xa5,
	0xc7, 0xfe, 0xab, 0x5e, 0x7a, 0xe8, 0xa1, 0x3f, 0xa5, 0xb7, 0xfe, 0x82, 0x62, 0x48, 0xae, 0xb4,
	0x92, 0xed, 0x06, 0x28, 0xd0, 0xdb, 0xf2, 0x99, 0x21, 0x67, 0xf8, 0xcc, 0xcc, 0xc3, 0x85, 0xb5,
	0x8c, 0x2b, 0x8d, 0x72, 0xb7, 0x94, 0x85, 0x2e, 0x58, 0xd7, 0xae, 0xa2, 0xf2, 0x24, 0xf8, 0xb3,
	0x01, 0xdd, 0x6f, 0x90, 0x4b, 0x7d, 0x82, 0x5c, 0xb3, 0x75, 0x68, 0x88, 0xd2, 0xf7, 0x86, 0xde,
	0xa8, 0x1b, 0x36, 0x44, 0xc9, 0x18, 0xb4, 0xca, 0x42, 0x6a, 0xbf, 0x31, 0xf4, 0x46, 0xfd, 0xd0,
	0x7c, 0xb3, 0xfb, 0x00, 0xe5, 0xe4, 0x24, 0x15, 0x71, 0x34, 0x91, 0xa9, 0xdf, 0x34, 0xbe, 0x5d,
	0x8b, 0xbc, 0x91, 0x29, 0x1b, 0xc1, 0x20, 0xe3, 0x97, 0xd1, 0x79, 0x91, 0x4e, 0x32, 0x8c, 0xe2,
	0x62, 0x92, 0x6b, 0xbf, 0x65, 0xb6, 0xaf, 0x67, 0xfc, 0xf2, 0xad, 0x81, 0xf7, 0x09, 0x65, 0x43,
	0xca, 0xea, 0x32, 0x3a, 0x15, 0x29, 0x46, 0x63, 0x9c, 0xfa, 0x2b, 0x43, 0x6f, 0xd4, 0x0a, 0x21,
	0xe3, 0x97, 0xcf, 0x45, 0x8a, 0x07, 0x38, 0x65, 0x0f, 0xa1, 0x97, 0x70, 0xcd, 0xa3, 0x18, 0x73,
	0x8d, 0xd2, 0x6f, 0x9b, 0x58, 0x40, 0xd0, 0xbe, 0x41, 0x28, 0x3f, 0xc9, 0xe3, 0xb1, 0xbf, 0x6a,
	0x2c, 0xe6, 0x9b, 0xf2, 0xe3, 0x49, 0x26, 0xf2, 0xc8, 0x64, 0xde, 0x31, 0xa1, 0xbb, 0x06, 0x39,
	0xa2, 0xf4, 0xbf, 0x80, 0x55, 0x9b, 0x9b, 0xf2, 0xbb, 0xc3, 0xe6, 0xa8, 0xb7, 0xf7, 0xc1, 0xee,
	0x8c, 0x8d, 0x5d, 0x9b, 0xde, 0x8b, 0xfc, 0xb4, 0x90, 0x19, 0xd7, 0xa2, 0xc8, 0x5f, 0xa2, 0x52,
	0xfc, 0x0c, 0xc3, 0x6a, 0x0f, 0xbb, 0x03, 0x9d, 0x1c, 0x2f, 0xa2, 0x73, 0x91, 0x28, 0x1f, 0x86,
	0xcd, 0x51, 0x3f, 0x5c, 0xcd, 0xf1, 0xe2, 0xad, 0x48, 0x14, 0xfb, 0x3f, 0xac, 0x25, 0x98, 0xa2,
	0xc6, 0xc4, 0x9a, 0x7b, 0xc6, 0xdc, 0x73, 0x18, 0xb9, 0x04, 0x0a, 0x36, 0x67, 0x64, 0x87, 0xa8,
	0xca, 0x22, 0x57, 0xc8, 0x46, 0xb0, 0x61, 0x4f, 0x3f, 0x16, 0xef, 0xf0, 0x50, 0x64, 0x42, 0x9b,
	0x0a, 0xb4, 0xc2, 0x65, 0x98, 0xdd, 0x83, 0xae, 0xc2, 0x58, 0xa2, 0x3e, 0xc0, 0xa9, 0xa9, 0x49,
	0x37, 0x9c, 0x03, 0xec, 0x36, 0xb4, 0x53, 0xe4, 0x09, 0x4a, 0x57, 0x14, 0xb7, 0x0a, 0x7e, 0x5f,
	0x01, 0xff, 0xa6, 0x8b, 0x99, 0x8a, 0x27, 0x26, 0x5e, 0x3f, 0x6c, 0x88, 0x84, 0x18, 0x55, 0xe2,
	0x1d, 0x9a, 0xd3, 0x5b, 0xa1, 0xf9, 0x66, 0x0f, 0x00, 0xe2, 0x22, 0x4d, 0x31, 0xa6, 0x8d, 0xee,
	0xf0, 0x1a, 0x42, 0x8c, 0x9b, 0x22, 0xce, 0x8b, 0xdd, 0x0a, 0xbb, 0x84, 0xd8, 0x3a, 0xcf, 0x78,
	0x71, 0x0e, 0xb6, 0xce, 0x8e, 0x17, 0xeb, 0xf2, 0x29, 0xb0, 0x8a, 0xba, 0x93, 0xe9, 0xcc, 0xb1,
	0x6d, 0x1c, 0x07, 0xce, 0xf2, 0x74, 0x5a, 0x79, 0xdf, 0x85, 0xae, 0x44, 0x9e, 0x44, 0x45, 0x9e,
	0x4e, 0x4d, 0xe9, 0x3b, 0x61, 0x87, 0x80, 0x57, 0x79, 0x3a, 0x65, 0x9f, 0xc0, 0xa6, 0xc4, 0x32,
	0x15, 0x31, 0x8f, 0xca, 0x94, 0xc7, 0x98, 0x61, 0x5e, 0x75, 0xc1, 0xc0, 0x19, 0x8e, 0x2a, 0x9c,
	0xf9, 0xb0, 0x7a, 0x8e, 0x52, 0xd1, 0xb5, 0xba, 0xc6, 0xa5, 0x5a, 0xb2, 0x01, 0x34, 0xb5, 0x4e,
	0x7d, 0x30, 0x28, 0x7d, 0xd2, 0x35, 0x32, 0xcc, 0x0a, 0x39, 0x8d, 0x74, 0xa1, 0x79, 0xea, 0xf7,
	0xec, 0x35, 0x2c, 0xf6, 0x9a, 0x20, 0xea, 0x57, 0xe7, 0x72, 0x2a, 0x11, 0xfd, 0x35, 0xd7, 0xd0,
	0x06, 0x7a, 0x2e, 0x11, 0xd9, 0x87, 0xb0, 0x9e, 0x08, 0x35, 0x8e, 0x2e, 0xb8, 0x46, 0x99, 0x71,
	0x39, 0xf6, 0xfb, 0xc6, 0xa7, 0x4f, 0xe8, 0xf7, 0x15, 0x48, 0x84, 0x1a, 0x37, 0x1b, 0x68, 0xdd,
	0x12, 0x4a, 0x88, 0x0d, 0x73, 0x17, 0xcc, 0xc2, 0x06, 0xd9, 0x30, 0xd6, 0x0e, 0x01, 0x26, 0x04,
	0xcd, 0x0c, 0x19, 0x13, 0x3c, 0x17, 0x31, 0xfa, 0x03, 0x37, 0x33, 0x42, 0x8d, 0xbf, 0x36, 0x08,
	0x0d, 0xa8, 0x71, 0xc8, 0x88, 0xcb, 0xa8, 0x2c, 0x44, 0xae, 0xfd, 0x4d, 0xe3, 0x65, 0x72, 0x7b,
	0x49, 0xf0, 0x11, 0xa1, 0x6c, 0x1b, 0x56, 0xd2, 0x82, 0x27, 0x8f, 0x7d, 0x36, 0xf4, 0x46, 0x5e,
	0x68, 0x17, 0x15, 0xfa, 0xc4, 0xdf, 0x9a, 0xa3, 0x4f, 0x4c, 0xf3, 0x91, 0xf9, 0x89, 0xbf, 0x6d,
	0x60, 0xb7, 0x62, 0x1f, 0xc3, 0x66, 0x29, 0x8b, 0x18, 0x95, 0x8a, 0xe2, 0x72, 0x12, 0x4d, 0xa8,
	0xe9, 0xfc, 0xff, 0x19, 0x97, 0x0d, 0x67, 0xd8, 0x2f, 0x27, 0x6f, 0x4c, 0x2f, 0x3e, 0x84, 0x5e,
	0xe5, 0x2b, 0x95, 0xf2, 0x6f, 0x5b, 0xfa, 0x1c, 0x14, 0x2a, 0x15, 0xac, 0xc2, 0xca, 0xb3, 0xac,
	0xd4, 0xd3, 0xe0, 0x57, 0x0f, 0x36, 0x8e, 0x27, 0x25, 0xca, 0xa7, 0x69, 0x11, 0x8f, 0x9f, 0x5d,
	0x6a, 0xc9, 0xd9, 0x2b, 0x58, 0x47, 0xc9, 0xd5, 0x44, 0x52, 0xfb, 0x24, 0x22, 0x3f, 0x33, 0x5d,
	0xdd, 0xdb, 0x1b, 0xd5, 0xe6, 0x7b, 0x69, 0xcf, 0xee, 0x33, 0xbb, 0x61, 0xdf, 0xf8, 0x87, 0x7d,
	0xac, 0x2f, 0x77, 0x7e, 0x80, 0xfe, 0x82, 0x9d, 0x66, 0x83, 0xb4, 0xc7, 0x4d, 0x8b, 0xf9, 0xa6,
	0x7b, 0x97, 0x5c, 0x0a, 0x3d, 0x75, 0x1a, 0xe9, 0x56, 0x54, 0x42, 0x27, 0x81, 0x24, 0x05, 0x4d,
	0x23, 0x05, 0x5d, 0x8b, 0xbc, 0x48, 0x54, 0xf0, 0x11, 0x6c, 0xed, 0xa7, 0x02, 0x73, 0x7d, 0x28,
	0x94, 0xc6, 0x3c, 0xc4, 0x9f, 0x26, 0xa8, 0x34, 0x45, 0xc8, 0x79, 0x86, 0x4e, 0x81, 0xcd, 0x77,
	0xf0, 0x33, 0xac, 0xdb, 0xe9, 0x3d, 0x2c, 0x62, 0x33, 0xba, 0xd4, 0x9b, 0x24, 0xbd, 0xd6, 0x89,
	0x3e, 0x97, 0x34, 0xb9, 0xb1, 0xac, 0xc9, 0x75, 0xd1, 0x6a, 0xfe, 0xb3, 0x68, 0xb5, 0xae, 0x8a,
	0xd6, 0x6b, 0xd8, 0x3a, 0x2c, 0x8a, 0xf1, 0xa4, 0xb4, 0x69, 0x54, 0xb9, 0x2e, 0xde, 0xd0, 0x1b,
	0x36, 0x29, 0xe6, 0xec, 0x86, 0x4b, 0xa2, 0xd1, 0x58, 0x16, 0x8d, 0xe0, 0x2f, 0x0f, 0xb6, 0x17,
	0x8f, 0x75, 0x72, 0xf8, 0x23, 0x6c, 0xcd, 0xce, 0x8d, 0x52, 0x77, 0x67, 0x1b, 0xa0, 0xb7, 0xf7,
	0xa8, 0x56, 0xcc, 0xeb, 0x76, 0x57, 0x0a, 0x9e, 0x54, 0x64, 0x85, 0x9b, 0xe7, 0x4b, 0x88, 0xda,
	0xb9, 0x84, 0xc1, 0xb2, 0x1b, 0xcd, 0xd4, 0x2c, 0xaa, 0x63, 0xb6, 0x53, 0xed, 0x64, 0x8f, 0xa1,
	0x3b, 0x4f, 0xa4, 0x61, 0x12, 0xd9, 0x5a, 0x48, 0xc4, 0xc5, 0x9a, 0x7b, 0xd1, 0x94, 0xa0, 0x94,
	0x45, 0xa5, 0xc5, 0x76, 0x11, 0x7c, 0x0e, 0x9d, 0x7f, 0x5d, 0xc5, 0xe0, 0x0f, 0x0f, 0xfa, 0x5f,
	0x29, 0x25, 0xce, 0x66, 0xed, 0xb2, 0x0d, 0x2b, 0x56, 0x29, 0xed, 0x7b, 0x61, 0x17, 0x6c, 0x08,
	0x3d, 0x27, 0x74, 0x35, 0xea, 0xeb, 0xd0, 0x7b, 0x05, 0xdd, 0x89, 0x5f, 0xcb, 0xa6, 0x46, 0xe2,
	0xb7, 0xf4, 0x12, 0xaf, 0xdc, 0xf8, 0x12, 0xb7, 0x6b, 0x2f, 0x31, 0xe9, 0x14, 0x6d, 0xca, 0x8b,
	0x04, 0xdd, 0x13, 0xdd, 0x21, 0xe0, 0xdb, 0x22, 0x31, 0x6d, 0x5d, 0x5d, 0xc6, 0x15, 0x7e, 0x00,
	0xcd, 0xd3, 0x19, 0xf9, 0xf4, 0x59, 0x51, 0xd4, 0xb8, 0x89, 0xa2, 0x2b, 0x3f, 0x1f, 0x33, 0x42,
	0x5a, 0x75, 0x42, 0x66, 0xb5, 0x58, 0xa9, 0xd7, 0xe2, 0x0c, 0x36, 0x8f, 0x35, 0xd7, 0x42, 0x69,
	0x11, 0xab, 0x8a, 0xd1, 0x25, 0xee, 0xbc, 0xf7, 0x71, 0xd7, 0xb8, 0x89, 0xbb, 0xe6, 0x8c, 0xbb,
	0xe0, 0x37, 0x0f, 0x58, 0x3d, 0x92, 0xbb, 0xee, 0x7f, 0x10, 0x8a, 0xe8, 0x31, 0x6f, 0x46, 0x64,
	0xde, 0x70, 0xf7, 0x12, 0x1b, 0x84, 0x7e, 0x22, 0xa8, 0x20, 0x13, 0x85, 0x89, 0xb5, 0xda, 0x67,
	0xb8, 0x43, 0x80, 0x31, 0x2e, 0xbe, 0xe2, 0xed, 0xa5, 0x57, 0x7c, 0xef, 0x97, 0x26, 0xac, 0x1e,
	0x23, 0xbf, 0x40, 0x4c, 0xd8, 0x0b, 0xe8, 0x1f, 0x63, 0x9e, 0xcc, 0xff, 0x1b, 0xb7, 0x6b, 0xd3,
	0x30, 0x43, 0x77, 0xee, 0x5d, 0x87, 0x56, 0xf7, 0x0f, 0x6e, 0x8d, 0xbc, 0x47, 0x1e, 0x3b, 0x82,
	0xfe, 0x01, 0x62, 0xb9, 0x5f, 0xe4, 0x39, 0xc6, 0x1a, 0x13, 0xf6, 0xa0, 0xb6, 0xe9, 0x1a, 0x89,
	0xdc, 0xb9, 0x73, 0xe5, 0x77, 0xad, 0x9a, 0x28, 0x77, 0xe2, 0x77, 0xb0, 0x56, 0x57, 0x86, 0x85,
	0x03, 0xaf, 0xd1, 0xb1, 0x9d, 0x87, 0xef, 0x91, 0x94, 0xe0, 0x16, 0xfb, 0x12, 0xda, 0xb6, 0x57,
	0x99, 0x5f, 0x73, 0x5e, 0x98, 0xc5, 0x85, 0xbc, 0x16, 0x1b, 0x3b, 0xb8, 0xc5, 0x0e, 0x00, 0xe6,
	0x1d, 0xc0, 0xea, 0xbc, 0x5c, 0x69, 0xc1, 0x9d, 0xfb, 0x37, 0x58, 0xab, 0xc3, 0x4e, 0xda, 0xe6,
	0x27, 0xfe, 0xb3, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0xbc, 0xde, 0xc6, 0xb3, 0xd4, 0x0b, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SeaweedClient is the client API for Seaweed service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SeaweedClient interface {
	SendHeartbeat(ctx context.Context, opts ...grpc.CallOption) (Seaweed_SendHeartbeatClient, error)
	KeepConnected(ctx context.Context, opts ...grpc.CallOption) (Seaweed_KeepConnectedClient, error)
	LookupVolume(ctx context.Context, in *LookupVolumeRequest, opts ...grpc.CallOption) (*LookupVolumeResponse, error)
	Assign(ctx context.Context, in *AssignRequest, opts ...grpc.CallOption) (*AssignResponse, error)
	Statistics(ctx context.Context, in *StatisticsRequest, opts ...grpc.CallOption) (*StatisticsResponse, error)
}

type seaweedClient struct {
	cc *grpc.ClientConn
}

func NewSeaweedClient(cc *grpc.ClientConn) SeaweedClient {
	return &seaweedClient{cc}
}

func (c *seaweedClient) SendHeartbeat(ctx context.Context, opts ...grpc.CallOption) (Seaweed_SendHeartbeatClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Seaweed_serviceDesc.Streams[0], "/master_pb.Seaweed/SendHeartbeat", opts...)
	if err != nil {
		return nil, err
	}
	x := &seaweedSendHeartbeatClient{stream}
	return x, nil
}

type Seaweed_SendHeartbeatClient interface {
	Send(*Heartbeat) error
	Recv() (*HeartbeatResponse, error)
	grpc.ClientStream
}

type seaweedSendHeartbeatClient struct {
	grpc.ClientStream
}

func (x *seaweedSendHeartbeatClient) Send(m *Heartbeat) error {
	return x.ClientStream.SendMsg(m)
}

func (x *seaweedSendHeartbeatClient) Recv() (*HeartbeatResponse, error) {
	m := new(HeartbeatResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *seaweedClient) KeepConnected(ctx context.Context, opts ...grpc.CallOption) (Seaweed_KeepConnectedClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Seaweed_serviceDesc.Streams[1], "/master_pb.Seaweed/KeepConnected", opts...)
	if err != nil {
		return nil, err
	}
	x := &seaweedKeepConnectedClient{stream}
	return x, nil
}

type Seaweed_KeepConnectedClient interface {
	Send(*ClientListenRequest) error
	Recv() (*VolumeLocation, error)
	grpc.ClientStream
}

type seaweedKeepConnectedClient struct {
	grpc.ClientStream
}

func (x *seaweedKeepConnectedClient) Send(m *ClientListenRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *seaweedKeepConnectedClient) Recv() (*VolumeLocation, error) {
	m := new(VolumeLocation)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *seaweedClient) LookupVolume(ctx context.Context, in *LookupVolumeRequest, opts ...grpc.CallOption) (*LookupVolumeResponse, error) {
	out := new(LookupVolumeResponse)
	err := c.cc.Invoke(ctx, "/master_pb.Seaweed/LookupVolume", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *seaweedClient) Assign(ctx context.Context, in *AssignRequest, opts ...grpc.CallOption) (*AssignResponse, error) {
	out := new(AssignResponse)
	err := c.cc.Invoke(ctx, "/master_pb.Seaweed/Assign", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *seaweedClient) Statistics(ctx context.Context, in *StatisticsRequest, opts ...grpc.CallOption) (*StatisticsResponse, error) {
	out := new(StatisticsResponse)
	err := c.cc.Invoke(ctx, "/master_pb.Seaweed/Statistics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SeaweedServer is the server API for Seaweed service.
type SeaweedServer interface {
	SendHeartbeat(Seaweed_SendHeartbeatServer) error
	KeepConnected(Seaweed_KeepConnectedServer) error
	LookupVolume(context.Context, *LookupVolumeRequest) (*LookupVolumeResponse, error)
	Assign(context.Context, *AssignRequest) (*AssignResponse, error)
	Statistics(context.Context, *StatisticsRequest) (*StatisticsResponse, error)
}

func RegisterSeaweedServer(s *grpc.Server, srv SeaweedServer) {
	s.RegisterService(&_Seaweed_serviceDesc, srv)
}

func _Seaweed_SendHeartbeat_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SeaweedServer).SendHeartbeat(&seaweedSendHeartbeatServer{stream})
}

type Seaweed_SendHeartbeatServer interface {
	Send(*HeartbeatResponse) error
	Recv() (*Heartbeat, error)
	grpc.ServerStream
}

type seaweedSendHeartbeatServer struct {
	grpc.ServerStream
}

func (x *seaweedSendHeartbeatServer) Send(m *HeartbeatResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *seaweedSendHeartbeatServer) Recv() (*Heartbeat, error) {
	m := new(Heartbeat)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Seaweed_KeepConnected_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SeaweedServer).KeepConnected(&seaweedKeepConnectedServer{stream})
}

type Seaweed_KeepConnectedServer interface {
	Send(*VolumeLocation) error
	Recv() (*ClientListenRequest, error)
	grpc.ServerStream
}

type seaweedKeepConnectedServer struct {
	grpc.ServerStream
}

func (x *seaweedKeepConnectedServer) Send(m *VolumeLocation) error {
	return x.ServerStream.SendMsg(m)
}

func (x *seaweedKeepConnectedServer) Recv() (*ClientListenRequest, error) {
	m := new(ClientListenRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Seaweed_LookupVolume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LookupVolumeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SeaweedServer).LookupVolume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/master_pb.Seaweed/LookupVolume",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SeaweedServer).LookupVolume(ctx, req.(*LookupVolumeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Seaweed_Assign_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AssignRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SeaweedServer).Assign(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/master_pb.Seaweed/Assign",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SeaweedServer).Assign(ctx, req.(*AssignRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Seaweed_Statistics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatisticsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SeaweedServer).Statistics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/master_pb.Seaweed/Statistics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SeaweedServer).Statistics(ctx, req.(*StatisticsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Seaweed_serviceDesc = grpc.ServiceDesc{
	ServiceName: "master_pb.Seaweed",
	HandlerType: (*SeaweedServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "LookupVolume",
			Handler:    _Seaweed_LookupVolume_Handler,
		},
		{
			MethodName: "Assign",
			Handler:    _Seaweed_Assign_Handler,
		},
		{
			MethodName: "Statistics",
			Handler:    _Seaweed_Statistics_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SendHeartbeat",
			Handler:       _Seaweed_SendHeartbeat_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "KeepConnected",
			Handler:       _Seaweed_KeepConnected_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "master.proto",
}
